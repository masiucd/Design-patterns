(()=>{"use strict";var t=function(){function t(){this.messageBox=[],this.members=[]}return t.prototype.register=function(t){this.members.push(t),t.adminMediator=this},Object.defineProperty(t.prototype,"getMessageBox",{get:function(){return this.messageBox},enumerable:!1,configurable:!0}),t.prototype.send=function(t,n){console.log("message",t),console.log("from",n);var e={message:t,from:n};this.messageBox.push(e)},t}();function n(){return{loadMediator:function(){return new t}}}var e,i=function(){function t(t,n,e){this.teacher=t,this.students=n,this.admin=e}return t.prototype.render=function(){this.teacher.init(),this.admin.init(),this.students.init(),console.log(n().loadMediator())},t}(),o=function(){function t(t,n,e,i,o){this.parentElement=t,this.dataList=n,this.title=e,this.subTitles=i,this.type=o}return t.prototype.clickHandler=function(t){document.querySelectorAll("tr").forEach((function(n){return n.addEventListener("click",(function(){"student"===n.id.split("-")[0]&&t(parseInt(n.dataset.id,10))}))}))},t.prototype.render=function(){var t=this,n='\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table class="'+this.title+'">\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(n){var e=n.displayInfo();return'\n                <tr data-id="'+n.id+'" id="'+("student"===t.type?"student-"+n.id:"course"===t.type?"course-"+n.id:"teacher-"+n.id)+'">\n                '+Object.keys(e).map((function(t){return'<td data-info="'+e[t]+'">'+e[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    ";this.parentElement.innerHTML=n},t.prototype.renderRawHtml=function(){return'\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table>\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(t){var n=t.displayInfo();return'\n                <tr data-id="'+t.id+'">\n                '+Object.keys(n).map((function(t){return"<td>"+n[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    "},t.prototype.mount=function(t){t.innerHTML=this.renderRawHtml()},t.prototype.init=function(){this.render()},t}(),r=function(t,n,e,i,o){this.id=t,this.firstName=n,this.lastName=e,this.email=i,this.age=o},s=(e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(t,n)},function(t,n){function i(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}),a=function(t){function n(n,e,i,o,r){var s=t.call(this,n,e,i,o,r)||this;return s.subjects=[],s}return s(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},Object.defineProperty(n.prototype,"addSubject",{set:function(t){this.subjects.push(t)},enumerable:!1,configurable:!0}),n}(r),u=function(){function t(t){this.parentElement=t,this.teachersView=new o(this.parentElement,[new a(1,"Frank","Smith","frank@io.com",43),new a(2,"Logan","Jonsson","logan@io.com",47),new a(3,"Mia","Greger","mia@io.com",41),new a(4,"Boris","Rooney","frank@io.com",53)],"Teachers",["name","email","age"],"teacher")}return t.prototype.init=function(){this.teachersView.init()},t}(),c=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}(),d=function(t){function n(n,e,i,o,r){var s=t.call(this,n,e,i,o,r)||this;return s.adminMediator=null,s}return c(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},n.prototype.send=function(t){var n;null===(n=this.adminMediator)||void 0===n||n.send(t,this),console.log("x",t),console.log(this.adminMediator)},n.prototype.receive=function(t,n){return t+" - from "+n},n}(r),l=function(){return[new d(1,"Frank","Mellberg","frank@io.com",21),new d(2,"Rio","Ferdinand","rio@io.com",25),new d(3,"Nemanja","Vidic","nemanja@io.com",32),new d(4,"Fredrik","ljungberg","fredrik@io.com",32)]},h=function(){function t(){this.id=99,this.firstName="Alfred",this.slug="I am the boss üí∞!!!",this.isAdmin=!0,this.adminMediator=null}return t.getInstance=function(){return t.instance||(t.instance=new t),t.instance},Object.defineProperty(t.prototype,"getMessages",{get:function(){var t;return null===(t=this.adminMediator)||void 0===t?void 0:t.messageBox},enumerable:!1,configurable:!0}),t}();function p(){var t=function(){return new h};return n().loadMediator().register(t()),{admin:t()}}var m=function(){function t(t,n,e,i,r){this.parentElement=t,this.list=n,this.data=e,this.title=i,this.subTitles=r,this.listView=new o(this.parentElement,this.list,this.title,this.subTitles,"student"),this.confirmationText="",this.admin=p().admin}return t.prototype.updateText=function(t){this.confirmationText=t},t.prototype.render=function(){var t,n=this,e=document.querySelector(".modal");e.classList.add("show-modal");var i='\n    <div class="modal-container">\n      '+this.listView.renderRawHtml()+"\n      "+this.confirmationText+'\n      <button class="close-modal">\n        ‚ùå\n      </button>\n    </div>\n    ';e.innerHTML=i,null===(t=document.querySelector(".close-modal"))||void 0===t||t.addEventListener("click",(function(){e.classList.remove("show-modal"),e.innerHTML=""})),document.querySelectorAll(".modal tbody tr").forEach((function(t){t.addEventListener("click",(function(t){if("send"in n.data){var e="You have now been registered to the "+t.target.innerText+" Course";n.data.send(e),n.updateText(e),n.updateHtml()}}))}))},t.prototype.updateHtml=function(){this.render(),p()},t}(),f=function(){function t(t,n,e,i){this.id=t,this.title=n,this.description=e,this.duration=i}return t.prototype.displayInfo=function(){return{title:this.title,duration:this.duration}},t}(),y=function(){function t(t){this.parentElement=t,this.studentsView=new o(this.parentElement,l(),"Students",["name","email","age"],"student")}return t.prototype.handleClickStudent=function(){this.studentsView.clickHandler((function(t){var n=l().find((function(n){return n.id===t})),e=[new f(1,"math","math is wonderful","6h"),new f(2,"history","history is good for you","3h"),new f(3,"swedish","without swedish you will face some serious problems","2h"),new f(4,"english","the global language, learn it NOW!!!","5h")],i=document.querySelector(".modal-list");new m(i,e,n,"courses",["title","duration"]).render()}))},t.prototype.handleShowProfile=function(){},t.prototype.init=function(){this.studentsView.init(),this.handleClickStudent(),this.handleShowProfile(),function(){for(var t=0,e=l();t<e.length;t++){var i=e[t];n().loadMediator().register(i)}}()},t}(),w=function(){function t(t){this.parentElement=t,this.admin=p().admin}return t.prototype.render=function(){var t,n='\n      <div class="admin-wrapper wrapper-'+this.admin.firstName+'">\n        <button id="admin-profile-btn" class="button">Admin Profile</button>\n\n        <div class="admin-content">\n          <h3> Mr Admin '+this.admin.firstName+"</h3>\n          <p>"+this.admin.slug+"</p>\n        </div>\n\n      </div>\n    ";this.parentElement.innerHTML=n;var e=document.querySelector(".admin-content");null===(t=document.getElementById("admin-profile-btn"))||void 0===t||t.addEventListener("click",(function(){e.classList.toggle("show-admin-content")}))},t}(),g=function(){function t(t){this.parentElement=t,this.adminView=new w(this.parentElement)}return t.prototype.init=function(){this.adminView.render()},t}();new i(new u(document.getElementById("teacher")),new y(document.getElementById("student")),new g(document.getElementById("admin"))).render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,