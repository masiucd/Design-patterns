(()=>{"use strict";var t=function(){return(t=Object.assign||function(t){for(var e,o=1,n=arguments.length;o<n;o++)for(var i in e=arguments[o])Object.prototype.hasOwnProperty.call(e,i)&&(t[i]=e[i]);return t}).apply(this,arguments)},e=function(){function e(){this.backlogs=[],this.backlogs=[{id:1,task:"go out with the dog",completed:!1},{id:2,task:"done homework",completed:!0},{id:3,task:"go out for a run",completed:!0},{id:4,task:"cook some food",completed:!1}]}return e.prototype.addBacklog=function(t){return this.backlogs.push(t),this.backlogs},e.prototype.editBacklog=function(e,o,n){return void 0===o&&(o=""),void 0===n&&(n=!1),this.backlogs=this.backlogs.map((function(i){return i.id===e?t(t({},i),{task:o,completed:n}):i})),this.backlogs},e.prototype.toggleBacklog=function(e){return this.backlogs=this.backlogs.map((function(o){return o.id===e?t(t({},o),{completed:!o.completed}):o})),this.backlogs},e.prototype.removeBacklog=function(t){return this.backlogs=this.backlogs.filter((function(e){return e.id!==t})),this.backlogs},Object.defineProperty(e.prototype,"allBacklogs",{get:function(){return this.backlogs},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"size",{get:function(){return this.backlogs.length},enumerable:!1,configurable:!0}),e.prototype.findBacklog=function(t){return this.backlogs.find((function(e){return e.id===t}))},e}(),o=function(){function t(){this.app=this.getElement("#root"),this.title=this.createElement("h1","main-title"),this.title.textContent="BackLogList List",this.form=this.createElement("form","backlog-form"),this.input=this.createElement("input","add-input"),this.input.type="text",this.input.placeholder="enter a new backlog to the backlog...",this.submitButton=this.createElement("button","add-btn"),this.submitButton.innerText="submit",this.backLogList=this.createElement("ul","backlog-list"),this.form.append(this.input,this.submitButton),this.app.append(this.title,this.form,this.backLogList)}return t.prototype.createElement=function(t,e){void 0===e&&(e="");var o=document.createElement(t);return e&&o.classList.add(e),o},t.prototype.getElement=function(t){return document.querySelector(t)},Object.defineProperty(t.prototype,"_getBacklogText",{get:function(){return this.input.value},enumerable:!1,configurable:!0}),t.prototype._clearInput=function(){this.input.value=""},t.prototype.renderBacklogItems=function(t){var e=this;if(0===t.length){var o=this.createElement("p","no-backlogs-message");o.innerText="No backlogs!",this.backLogList.append(o)}else t.forEach((function(t){var o,n=e.createElement("li","item");n.id=String(t.id);var i=e.createElement("checkbox","toggle-box");i.type="checkbox",i.checked=t.completed;var c=e.createElement("span","text-for-backlog");c.innerText=t.task,t.completed?n.classList.add("checked"):n.classList.remove("checked");var a=e.createElement("button","remove-btn");a.textContent="Delete "+(null===(o=t.task)||void 0===o?void 0:o.slice(0,5))+"...",n.append(i,c,a),e.backLogList.append(n)}))},t.prototype.bindAddBacklog=function(t){this.form.addEventListener("submit",(function(t){t.preventDefault(),console.log("submitted")}))},t.prototype.bindToggleBacklog=function(t){},t.prototype.bindDeleteBacklog=function(t){},t.prototype.bindEditBacklog=function(t){},t}();new function(t,e){var o=this;this.backlogListChanged=function(t){o.view.renderBacklogItems(t)},this.handleAddBacklog=function(t){o.model.addBacklog(t)},this.handleEditBacklog=function(t,e,n){o.model.editBacklog(t,e,n)},this.handleToggleBacklog=function(t){o.handleToggleBacklog(t)},this.handleDelete=function(t){o.handleDelete(t)},this.model=t,this.view=e,this.backlogListChanged(this.model.backlogs),this.view.bindAddBacklog(this.handleAddBacklog),this.view.bindDeleteBacklog(this.handleDelete),this.view.bindEditBacklog(this.handleEditBacklog),this.view.bindToggleBacklog(this.handleToggleBacklog)}(new e,new o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,