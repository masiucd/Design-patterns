(()=>{"use strict";var t=function(){function t(t,e,n){this.teacher=t,this.courses=e,this.students=n}return t.prototype.render=function(){this.teacher.init(),this.courses.init(),this.students.init()},t}(),e=function(){function t(t,e,n,i){this.parentElement=t,this.dataList=e,this.title=n,this.subTitles=i}return t.prototype.clickHandler=function(t){var e,n=this.parentElement.getAttribute("id");console.log(n),console.log("hello world"),console.log(t),console.log(document.querySelectorAll("tr")),null===(e=document.querySelector(".table-wrapper table"))||void 0===e||e.firstChild,document.querySelectorAll("tr").forEach((function(e){return e.addEventListener("click",(function(){console.log(e.dataset.id),t(e.dataset.id)}))}))},t.prototype.render=function(){var t='\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table>\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(t){var e=t.displayInfo();return'\n                <tr data-id="'+t.id+'">\n                '+Object.keys(e).map((function(t){return"<td>"+e[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    ";this.parentElement.innerHTML=t},t.prototype.init=function(){this.render()},t}();let n=(t=21)=>{let e="",n=crypto.getRandomValues(new Uint8Array(t));for(;t--;){let i=63&n[t];e+=i<36?i.toString(36):i<62?(i-26).toString(36).toUpperCase():i<63?"_":"-"}return e};var i,o=function(){function t(t,e,n,i){this.id=t,this.title=e,this.description=n,this.duration=i}return t.prototype.displayInfo=function(){return{title:this.title,duration:this.duration}},t}(),r=function(){function t(t){this.parentElement=t,this.coursesView=new e(this.parentElement,[new o(n(),"math","math is wonderful","6h"),new o(n(),"history","history is good for you","3h"),new o(n(),"swedish","without swedish you will face some serious problems","2h"),new o(n(),"english","the global language, learn it NOW!!!","5h")],"Courses",["title","duration"])}return t.prototype.init=function(){this.coursesView.init()},t}(),s=function(t,e,n,i,o){this.id=t,this.firstName=e,this.lastName=n,this.email=i,this.age=o},a=(i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),c=function(t){function e(e,n,i,o,r){var s=t.call(this,e,n,i,o,r)||this;return s.subjects=[],s}return a(e,t),e.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},e}(s),u=function(){function t(t){this.parentElement=t,this.teachersView=new e(this.parentElement,[new c(n(),"Frank","Smith","frank@io.com",43),new c(n(),"Logan","Jonsson","logan@io.com",47),new c(n(),"Mia","Greger","mia@io.com",41),new c(n(),"Boris","Rooney","frank@io.com",53)],"Teachers",["name","email","age"])}return t.prototype.init=function(){this.teachersView.init()},t}(),l=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function i(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(i.prototype=n.prototype,new i)}}(),h=function(t){function e(e,n,i,o,r){return t.call(this,e,n,i,o,r)||this}return l(e,t),e.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},e}(s),d=function(){return[new h(n(),"Frank","Mellberg","frank@isObject.com",21),new h(n(),"Rio","Ferdinand","rio@isObject.com",25),new h(n(),"Nemanja","Vidic","nemanja@isObject.com",32),new h(n(),"Fredrik","ljungberg","fredrik@isObject.com",32),new h(n(),"Lotta","Schelin","lotta@isObject.com",21),new h(n(),"Stina","Olofsson","sina@isObject.com",21)]},p=function(){function t(t,e){this.parentElement=t,this.data=e}return t.prototype.render=function(){var t,e=this,n='\n      <p id="apa">'+this.data+"</p>\n    ";null===(t=document.getElementById("apa"))||void 0===t||t.addEventListener("click",(function(){console.log(e,"student has been clicked")})),this.parentElement.insertAdjacentHTML("beforeend",n)},t}(),f=function(){function t(t){this.parentElement=t,this.studentsView=new e(this.parentElement,d(),"Students",["name","email","age"])}return t.prototype.handleAddStudent=function(){var t=this;this.studentsView.clickHandler((function(e){var n=d().find((function(t){return t.id===e})),i=(null==n?void 0:n.firstName)+" - "+(null==n?void 0:n.lastName);new p(t.parentElement,i).render()}))},t.prototype.init=function(){this.studentsView.init(),this.handleAddStudent()},t}();new t(new u(document.getElementById("teacher")),new r(document.getElementById("course")),new f(document.getElementById("student"))).render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,