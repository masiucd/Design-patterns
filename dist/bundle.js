(()=>{"use strict";var t,n=function(){function t(t,n,e){this.teacher=t,this.courses=n,this.students=e}return t.prototype.render=function(){this.teacher.init(),this.courses.init(),this.students.init()},t}(),e=function(){function t(t,n,e,i){this.parentElement=t,this.dataList=n,this.title=e,this.subTitles=i}return t.prototype.clickHandler=function(t){document.querySelectorAll("tr").forEach((function(n){return n.addEventListener("click",(function(){t(parseInt(n.dataset.id,10)),sessionStorage.setItem("user",String(n.dataset.id))}))}))},t.prototype.render=function(){var t='\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table class="'+this.title+'">\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(t){var n=t.displayInfo();return'\n                <tr data-id="'+t.id+'">\n                '+Object.keys(n).map((function(t){return"<td>"+n[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    ";this.parentElement.innerHTML=t},t.prototype.renderRawHtml=function(){return'\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table>\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(t){var n=t.displayInfo();return'\n                <tr data-id="'+t.id+'">\n                '+Object.keys(n).map((function(t){return"<td>"+n[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    "},t.prototype.mount=function(t){t.innerHTML=this.renderRawHtml()},t.prototype.init=function(){this.render()},t}(),i=function(){function t(t,n,e,i){this.id=t,this.title=n,this.description=e,this.duration=i,this.courseMediator=null}return t.prototype.displayInfo=function(){return{title:this.title,duration:this.duration}},t}(),o=function(){return[new i(1,"math","math is wonderful","6h"),new i(2,"history","history is good for you","3h"),new i(3,"swedish","without swedish you will face some serious problems","2h"),new i(4,"english","the global language, learn it NOW!!!","5h")]},r=function(){function t(t){this.parentElement=t,this.coursesView=new e(this.parentElement,o(),"Courses",["title","duration"])}return t.prototype.init=function(){this.coursesView.init()},t}(),s=function(t,n,e,i,o){this.id=t,this.firstName=n,this.lastName=e,this.email=i,this.age=o},a=(t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)},function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),c=function(t){function n(n,e,i,o,r){var s=t.call(this,n,e,i,o,r)||this;return s.subjects=[],s}return a(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},n}(s),u=function(){function t(t){this.parentElement=t,this.teachersView=new e(this.parentElement,[new c(1,"Frank","Smith","frank@io.com",43),new c(2,"Logan","Jonsson","logan@io.com",47),new c(3,"Mia","Greger","mia@io.com",41),new c(4,"Boris","Rooney","frank@io.com",53)],"Teachers",["name","email","age"])}return t.prototype.init=function(){this.teachersView.init()},t}(),l=function(){function t(){this.students={}}return t.prototype.registerStudent=function(t){this.students[t.firstName]=t,t.studentMediator=this},t.prototype.send=function(t,n,e){},t}(),d=(function(){function t(){this.courses={}}t.prototype.registerStudent=function(t){this.courses[t.title]=t,t.courseMediator=this},t.prototype.send=function(t,n,e){}}(),function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}()),h=function(t){function n(n,e,i,o,r){var s=t.call(this,n,e,i,o,r)||this;return s.studentMediator=null,s}return d(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},n}(s);(new l).registerStudent;var p=function(){return[new h(1,"Frank","Mellberg","frank@isObject.com",21),new h(2,"Rio","Ferdinand","rio@isObject.com",25),new h(3,"Nemanja","Vidic","nemanja@isObject.com",32),new h(4,"Fredrik","ljungberg","fredrik@isObject.com",32),new h(5,"Lotta","Schelin","lotta@isObject.com",21),new h(6,"Stina","Olofsson","sina@isObject.com",21)]},f=function(){function t(t,n,i,o,r){this.parentElement=t,this.list=n,this.data=i,this.title=o,this.subTitles=r,this.listView=new e(this.parentElement,this.list,this.title,this.subTitles)}return t.prototype.render=function(){var t,n=this,e=document.querySelector(".modal");e.classList.add("show-modal");var i='\n    <div class="modal-container">\n      '+this.listView.renderRawHtml()+'\n      <button class="close-modal">\n        ‚ùå\n      </button>\n    </div>\n    ';e.innerHTML=i,null===(t=document.querySelector(".close-modal"))||void 0===t||t.addEventListener("click",(function(){e.classList.remove("show-modal")})),console.log(this.listView);var o=document.querySelectorAll(".modal tbody tr").forEach((function(t){console.log(t.dataset.id===String(n.data.id)),console.log("tr.dataset.id",t.dataset.id)}));console.log("trs",o)},t}(),m=function(){function t(t){this.parentElement=t,this.studentsView=new e(this.parentElement,p(),"Students",["name","email","age"])}return t.prototype.handleClickStudent=function(){this.studentsView.clickHandler((function(t){var n=p().find((function(n){return n.id===t})),e=o(),i=document.querySelector(".modal-list");new f(i,e,n,"courses",["title","duration"]).render()}))},t.prototype.init=function(){this.studentsView.init(),this.handleClickStudent()},t}();new n(new u(document.getElementById("teacher")),new r(document.getElementById("course")),new m(document.getElementById("student"))).render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,