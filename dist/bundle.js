(()=>{"use strict";var o=function(){function o(o){this.app=this.getElement("#root"),this.todos=o}return o.prototype.getElement=function(o){return document.querySelector(o)},o.prototype._getTodoText=function(){document.getElementById("form-input").value},o.prototype._resetInput=function(){var o=document.getElementById("form-input");o.value=o.value=""},o.prototype.renderTodos=function(){return this.todos.map((function(o){return'<li id="todo-item>\n          '+o.task+"\n          "+(o.completed?"completed":"not-completed")+"\n        </li>"})).join("")},o.prototype.render=function(){this.app.innerHTML+='\n        <main>\n        <h1>Todo list</h1>\n        <form>\n          <div class="form-group">\n            <input type="text" id="form-input" />\n          </div>\n          <div class="form-button-group">\n            <button type="submit">Add todo</button>    \n          </div>\n        </form>\n        <ul id="todo-list">\n          '+this.renderTodos()+"\n        </ul>\n      </main>\n      "},o}(),t=function(){return(t=Object.assign||function(o){for(var t,e=1,n=arguments.length;e<n;e++)for(var i in t=arguments[e])Object.prototype.hasOwnProperty.call(t,i)&&(o[i]=t[i]);return o}).apply(this,arguments)},e=function(){function o(){this.todos=[],this.todos=[{id:1,task:"go out with the dog",completed:!1},{id:2,task:"done homework",completed:!0},{id:3,task:"go out for a run",completed:!0},{id:4,task:"cook some food",completed:!1}]}return o.prototype.addTodo=function(o){return this.todos.push(o),this.todos},o.prototype.editTodo=function(o,e,n){return void 0===e&&(e=""),void 0===n&&(n=!1),this.todos=this.todos.map((function(i){return i.id===o?t(t({},i),{task:e,completed:n}):i})),this.todos},o.prototype.toggleTodo=function(o){return this.todos=this.todos.map((function(e){return e.id===o?t(t({},e),{completed:!e.completed}):e})),this.todos},o.prototype.removeTodo=function(o){return this.todos=this.todos.filter((function(t){return t.id!==o})),this.todos},Object.defineProperty(o.prototype,"allTodos",{get:function(){return this.todos},enumerable:!1,configurable:!0}),Object.defineProperty(o.prototype,"size",{get:function(){return this.todos.length},enumerable:!1,configurable:!0}),o.prototype.findTodo=function(o){return this.todos.find((function(t){return t.id===o}))},o}(),n=new e;console.log(n.size),n.removeTodo(3),n.toggleTodo(1),console.log(n.allTodos),console.log(n.size),console.log(n.findTodo(1)),n.editTodo(1,"hello",!1),console.log(n.findTodo(1)),new o((new e).allTodos).render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY2hvb2wtZGF0YS8uL3NyYy9wYXR0ZXJucy9tdmMvdmlld3MvdG9kby12aWV3LnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL3BhdHRlcm5zL212Yy9tb2RlbHMvdG9kby1saXN0LnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbInRvZG9zIiwidGhpcyIsImFwcCIsImdldEVsZW1lbnQiLCJzZWxlY3RvciIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIl9nZXRUb2RvVGV4dCIsImdldEVsZW1lbnRCeUlkIiwidmFsdWUiLCJfcmVzZXRJbnB1dCIsImlucHV0IiwicmVuZGVyVG9kb3MiLCJtYXAiLCJ0b2RvIiwidGFzayIsImNvbXBsZXRlZCIsImpvaW4iLCJyZW5kZXIiLCJpbm5lckhUTUwiLCJpZCIsImFkZFRvZG8iLCJwdXNoIiwiZWRpdFRvZG8iLCJ0b2RvSWQiLCJ0b2dnbGVUb2RvIiwicmVtb3ZlVG9kbyIsImZpbHRlciIsImxlbmd0aCIsImZpbmRUb2RvIiwiZmluZCIsInQiLCJUb2RvTGlzdCIsImNvbnNvbGUiLCJsb2ciLCJzaXplIiwiYWxsVG9kb3MiLCJUb2RvVmlldyJdLCJtYXBwaW5ncyI6Im1CQUNBLGlCQUlFLFdBQVlBLEdBQ1ZDLEtBQUtDLElBQU1ELEtBQUtFLFdBQVcsU0FDM0JGLEtBQUtELE1BQVFBLEVBaURqQixPQTlDRSxZQUFBRyxXQUFBLFNBQVdDLEdBRVQsT0FEZ0JDLFNBQVNDLGNBQWNGLElBSWpDLFlBQUFHLGFBQVIsV0FDZ0JGLFNBQVNHLGVBQWUsY0FDYkMsT0FHbkIsWUFBQUMsWUFBUixXQUNFLElBQU1DLEVBQVFOLFNBQVNHLGVBQWUsY0FDdENHLEVBQU1GLE1BQVFFLEVBQU1GLE1BQVEsSUFHOUIsWUFBQUcsWUFBQSxXQVVFLE9BVGVYLEtBQUtELE1BQ2pCYSxLQUNDLFNBQUFDLEdBQ0UsdUNBQ0VBLEVBQUtDLEtBQUksZ0JBQ1RELEVBQUtFLFVBQVksWUFBYyxpQkFBZSxxQkFHbkRDLEtBQUssS0FJVixZQUFBQyxPQUFBLFdBQ0VqQixLQUFLQyxJQUFJaUIsV0FBYSx3VkFZZGxCLEtBQUtXLGNBQWEsMENBSzlCLEVBdkRBLEcsK01DS0EsYUFFRSxhQURBLEtBQUFaLE1BQW9CLEdBRWxCQyxLQUFLRCxNQUFRLENBQ1gsQ0FBRW9CLEdBQUksRUFBR0wsS0FBTSxzQkFBdUJDLFdBQVcsR0FDakQsQ0FBRUksR0FBSSxFQUFHTCxLQUFNLGdCQUFpQkMsV0FBVyxHQUMzQyxDQUFFSSxHQUFJLEVBQUdMLEtBQU0sbUJBQW9CQyxXQUFXLEdBQzlDLENBQUVJLEdBQUksRUFBR0wsS0FBTSxpQkFBa0JDLFdBQVcsSUFtQ2xELE9BL0JFLFlBQUFLLFFBQUEsU0FBUVAsR0FFTixPQURBYixLQUFLRCxNQUFNc0IsS0FBS1IsR0FDVGIsS0FBS0QsT0FFZCxZQUFBdUIsU0FBQSxTQUFTQyxFQUFnQlQsRUFBbUJDLEdBSTFDLFlBSnVCLElBQUFELE1BQUEsU0FBbUIsSUFBQUMsT0FBQSxHQUMxQ2YsS0FBS0QsTUFBUUMsS0FBS0QsTUFBTWEsS0FBSSxTQUFBQyxHQUMxQixPQUFBQSxFQUFLTSxLQUFPSSxFQUFTLEVBQUQsS0FBTVYsR0FBSSxDQUFFQyxLQUFJLEVBQUVDLFVBQVMsSUFBS0YsS0FFL0NiLEtBQUtELE9BR2QsWUFBQXlCLFdBQUEsU0FBV0QsR0FJVCxPQUhBdkIsS0FBS0QsTUFBUUMsS0FBS0QsTUFBTWEsS0FBSSxTQUFBQyxHQUMxQixPQUFBQSxFQUFLTSxLQUFPSSxFQUFTLEVBQUQsS0FBTVYsR0FBSSxDQUFFRSxXQUFZRixFQUFLRSxZQUFjRixLQUUxRGIsS0FBS0QsT0FFZCxZQUFBMEIsV0FBQSxTQUFXRixHQUVULE9BREF2QixLQUFLRCxNQUFRQyxLQUFLRCxNQUFNMkIsUUFBTyxTQUFBYixHQUFRLE9BQUFBLEVBQUtNLEtBQU9JLEtBQzVDdkIsS0FBS0QsT0FHZCxzQkFBSSx1QkFBUSxDLElBQVosV0FDRSxPQUFPQyxLQUFLRCxPLGdDQUVkLHNCQUFJLG1CQUFJLEMsSUFBUixXQUNFLE9BQU9DLEtBQUtELE1BQU00QixRLGdDQUVwQixZQUFBQyxTQUFBLFNBQVNMLEdBQ1AsT0FBT3ZCLEtBQUtELE1BQU04QixNQUFLLFNBQUFoQixHQUFRLE9BQUFBLEVBQUtNLEtBQU9JLE1BRS9DLEVBMUNBLEdBNENNTyxFQUFJLElBQUlDLEVBQ2RDLFFBQVFDLElBQUlILEVBQUVJLE1BQ2RKLEVBQUVMLFdBQVcsR0FDYkssRUFBRU4sV0FBVyxHQUNiUSxRQUFRQyxJQUFJSCxFQUFFSyxVQUNkSCxRQUFRQyxJQUFJSCxFQUFFSSxNQUNkRixRQUFRQyxJQUFJSCxFQUFFRixTQUFTLElBQ3ZCRSxFQUFFUixTQUFTLEVBQUcsU0FBUyxHQUN2QlUsUUFBUUMsSUFBSUgsRUFBRUYsU0FBUyxJQ2hESixJQUFJUSxHQUZKLElBQUlMLEdBQ0NJLFVBRWJsQixVIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRvZG9JdGVtIH0gZnJvbSBcIi4uL21vZGVscy90b2RvLWxpc3RcIlxuZXhwb3J0IGNsYXNzIFRvZG9WaWV3IHtcbiAgYXBwOiBIVE1MRGl2RWxlbWVudFxuICB0b2RvczogVG9kb0l0ZW1bXVxuXG4gIGNvbnN0cnVjdG9yKHRvZG9zOiBUb2RvSXRlbVtdKSB7XG4gICAgdGhpcy5hcHAgPSB0aGlzLmdldEVsZW1lbnQoXCIjcm9vdFwiKSBhcyBIVE1MRGl2RWxlbWVudFxuICAgIHRoaXMudG9kb3MgPSB0b2Rvc1xuICB9XG5cbiAgZ2V0RWxlbWVudChzZWxlY3Rvcjogc3RyaW5nKSB7XG4gICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3Ioc2VsZWN0b3IpXG4gICAgcmV0dXJuIGVsZW1lbnRcbiAgfVxuXG4gIHByaXZhdGUgX2dldFRvZG9UZXh0KCkge1xuICAgIGNvbnN0IGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJmb3JtLWlucHV0XCIpIGFzIEhUTUxJbnB1dEVsZW1lbnRcbiAgICBjb25zdCBpbnB1dFZhbHVlID0gaW5wdXQudmFsdWVcbiAgfVxuXG4gIHByaXZhdGUgX3Jlc2V0SW5wdXQoKSB7XG4gICAgY29uc3QgaW5wdXQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImZvcm0taW5wdXRcIikgYXMgSFRNTElucHV0RWxlbWVudFxuICAgIGlucHV0LnZhbHVlID0gaW5wdXQudmFsdWUgPSBcIlwiXG4gIH1cblxuICByZW5kZXJUb2RvcygpIHtcbiAgICBjb25zdCBvdXRwdXQgPSB0aGlzLnRvZG9zXG4gICAgICAubWFwKFxuICAgICAgICB0b2RvID0+XG4gICAgICAgICAgYDxsaSBpZD1cInRvZG8taXRlbT5cbiAgICAgICAgICAke3RvZG8udGFza31cbiAgICAgICAgICAke3RvZG8uY29tcGxldGVkID8gXCJjb21wbGV0ZWRcIiA6IFwibm90LWNvbXBsZXRlZFwifVxuICAgICAgICA8L2xpPmBcbiAgICAgIClcbiAgICAgIC5qb2luKFwiXCIpXG4gICAgcmV0dXJuIG91dHB1dFxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHRoaXMuYXBwLmlubmVySFRNTCArPSBgXG4gICAgICAgIDxtYWluPlxuICAgICAgICA8aDE+VG9kbyBsaXN0PC9oMT5cbiAgICAgICAgPGZvcm0+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cbiAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGlkPVwiZm9ybS1pbnB1dFwiIC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tYnV0dG9uLWdyb3VwXCI+XG4gICAgICAgICAgICA8YnV0dG9uIHR5cGU9XCJzdWJtaXRcIj5BZGQgdG9kbzwvYnV0dG9uPiAgICBcbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9mb3JtPlxuICAgICAgICA8dWwgaWQ9XCJ0b2RvLWxpc3RcIj5cbiAgICAgICAgICAke3RoaXMucmVuZGVyVG9kb3MoKX1cbiAgICAgICAgPC91bD5cbiAgICAgIDwvbWFpbj5cbiAgICAgIGBcbiAgfVxufVxuIiwiZXhwb3J0IGludGVyZmFjZSBUb2RvSXRlbSB7XG4gIGlkOiBudW1iZXJcbiAgdGFzazogc3RyaW5nXG4gIGNvbXBsZXRlZDogYm9vbGVhblxufVxuXG5leHBvcnQgY2xhc3MgVG9kb0xpc3Qge1xuICB0b2RvczogVG9kb0l0ZW1bXSA9IFtdXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMudG9kb3MgPSBbXG4gICAgICB7IGlkOiAxLCB0YXNrOiBcImdvIG91dCB3aXRoIHRoZSBkb2dcIiwgY29tcGxldGVkOiBmYWxzZSB9LFxuICAgICAgeyBpZDogMiwgdGFzazogXCJkb25lIGhvbWV3b3JrXCIsIGNvbXBsZXRlZDogdHJ1ZSB9LFxuICAgICAgeyBpZDogMywgdGFzazogXCJnbyBvdXQgZm9yIGEgcnVuXCIsIGNvbXBsZXRlZDogdHJ1ZSB9LFxuICAgICAgeyBpZDogNCwgdGFzazogXCJjb29rIHNvbWUgZm9vZFwiLCBjb21wbGV0ZWQ6IGZhbHNlIH0sXG4gICAgXVxuICB9XG5cbiAgYWRkVG9kbyh0b2RvOiBUb2RvSXRlbSkge1xuICAgIHRoaXMudG9kb3MucHVzaCh0b2RvKVxuICAgIHJldHVybiB0aGlzLnRvZG9zXG4gIH1cbiAgZWRpdFRvZG8odG9kb0lkOiBudW1iZXIsIHRhc2s6IHN0cmluZyA9IFwiXCIsIGNvbXBsZXRlZDogYm9vbGVhbiA9IGZhbHNlKSB7XG4gICAgdGhpcy50b2RvcyA9IHRoaXMudG9kb3MubWFwKHRvZG8gPT5cbiAgICAgIHRvZG8uaWQgPT09IHRvZG9JZCA/IHsgLi4udG9kbywgdGFzaywgY29tcGxldGVkIH0gOiB0b2RvXG4gICAgKVxuICAgIHJldHVybiB0aGlzLnRvZG9zXG4gIH1cblxuICB0b2dnbGVUb2RvKHRvZG9JZDogbnVtYmVyKSB7XG4gICAgdGhpcy50b2RvcyA9IHRoaXMudG9kb3MubWFwKHRvZG8gPT5cbiAgICAgIHRvZG8uaWQgPT09IHRvZG9JZCA/IHsgLi4udG9kbywgY29tcGxldGVkOiAhdG9kby5jb21wbGV0ZWQgfSA6IHRvZG9cbiAgICApXG4gICAgcmV0dXJuIHRoaXMudG9kb3NcbiAgfVxuICByZW1vdmVUb2RvKHRvZG9JZDogbnVtYmVyKSB7XG4gICAgdGhpcy50b2RvcyA9IHRoaXMudG9kb3MuZmlsdGVyKHRvZG8gPT4gdG9kby5pZCAhPT0gdG9kb0lkKVxuICAgIHJldHVybiB0aGlzLnRvZG9zXG4gIH1cblxuICBnZXQgYWxsVG9kb3MoKSB7XG4gICAgcmV0dXJuIHRoaXMudG9kb3NcbiAgfVxuICBnZXQgc2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy50b2Rvcy5sZW5ndGhcbiAgfVxuICBmaW5kVG9kbyh0b2RvSWQ6IG51bWJlcikge1xuICAgIHJldHVybiB0aGlzLnRvZG9zLmZpbmQodG9kbyA9PiB0b2RvLmlkID09PSB0b2RvSWQpXG4gIH1cbn1cblxuY29uc3QgdCA9IG5ldyBUb2RvTGlzdCgpXG5jb25zb2xlLmxvZyh0LnNpemUpXG50LnJlbW92ZVRvZG8oMylcbnQudG9nZ2xlVG9kbygxKVxuY29uc29sZS5sb2codC5hbGxUb2RvcylcbmNvbnNvbGUubG9nKHQuc2l6ZSlcbmNvbnNvbGUubG9nKHQuZmluZFRvZG8oMSkpXG50LmVkaXRUb2RvKDEsIFwiaGVsbG9cIiwgZmFsc2UpXG5jb25zb2xlLmxvZyh0LmZpbmRUb2RvKDEpKVxuIiwiaW1wb3J0IHsgVG9kb1ZpZXcgfSBmcm9tIFwiLi9wYXR0ZXJucy9tdmMvdmlld3MvdG9kby12aWV3XCJcbmltcG9ydCB7IFRvZG9MaXN0IH0gZnJvbSBcIi4vcGF0dGVybnMvbXZjL21vZGVscy90b2RvLWxpc3RcIlxuXG5mdW5jdGlvbiBjcmVhdGVFbGVtZW50KGVsZW1lbnRUeXBlOiBzdHJpbmcpIHtcbiAgcmV0dXJuIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoZWxlbWVudFR5cGUpXG59XG5cbjsoKCkgPT4ge1xuICBjb25zdCB0b2RvTGlzdCA9IG5ldyBUb2RvTGlzdCgpXG4gIGNvbnN0IGxpc3QgPSB0b2RvTGlzdC5hbGxUb2Rvc1xuICBjb25zdCB0b2RvVmlldyA9IG5ldyBUb2RvVmlldyhsaXN0KVxuICB0b2RvVmlldy5yZW5kZXIoKVxufSkoKVxuIl0sInNvdXJjZVJvb3QiOiIifQ==