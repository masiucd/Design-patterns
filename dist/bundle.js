(()=>{"use strict";var t,n=function(){function t(t,n,e){this.teacher=t,this.students=n,this.admin=e}return t.prototype.render=function(){this.teacher.init(),this.admin.init(),this.students.init()},t}(),e=function(){function t(t,n,e,i,o){this.parentElement=t,this.dataList=n,this.title=e,this.subTitles=i,this.type=o}return t.prototype.clickHandler=function(t){document.querySelectorAll("tr").forEach((function(n){return n.addEventListener("click",(function(){"student"===n.id.split("-")[0]&&t(parseInt(n.dataset.id,10))}))}))},t.prototype.render=function(){var t=this,n='\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table class="'+this.title+'">\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(n){var e=n.displayInfo();return'\n                <tr data-id="'+n.id+'" id="'+("student"===t.type?"student-"+n.id:"course"===t.type?"course-"+n.id:"teacher-"+n.id)+'">\n                '+Object.keys(e).map((function(t){return'<td data-info="'+e[t]+'">'+e[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    ";this.parentElement.innerHTML=n},t.prototype.renderRawHtml=function(){return'\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table>\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(t){var n=t.displayInfo();return'\n                <tr data-id="'+t.id+'">\n                '+Object.keys(n).map((function(t){return"<td>"+n[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    "},t.prototype.mount=function(t){t.innerHTML=this.renderRawHtml()},t.prototype.init=function(){this.render()},t}(),i=function(t,n,e,i,o){this.id=t,this.firstName=n,this.lastName=e,this.email=i,this.age=o},o=(t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)},function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=function(t){function n(n,e,i,o,r){var s=t.call(this,n,e,i,o,r)||this;return s.subjects=[],s}return o(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},Object.defineProperty(n.prototype,"addSubject",{set:function(t){this.subjects.push(t)},enumerable:!1,configurable:!0}),n}(i),s=function(){function t(t){this.parentElement=t,this.teachersView=new e(this.parentElement,[new r(1,"Frank","Smith","frank@io.com",43),new r(2,"Logan","Jonsson","logan@io.com",47),new r(3,"Mia","Greger","mia@io.com",41),new r(4,"Boris","Rooney","frank@io.com",53)],"Teachers",["name","email","age"],"teacher")}return t.prototype.init=function(){this.teachersView.init()},t}(),a=function(){function t(){this.id=99,this.firstName="Alfred",this.slug="I am the boss üí∞!!!",this.isAdmin=!0,this.messageBox=[],this.adminMediator=null}return t.getInstance=function(){return t.instance||(t.instance=new t),t.instance},t.prototype.receive=function(t,n){var e="Student "+n.firstName+" "+t;return console.log(e),this.messageBox.push(t),e},t.prototype.send=function(t){var n;null===(n=this.adminMediator)||void 0===n||n.send(t,this),console.log("x",t),console.log(this.adminMediator)},Object.defineProperty(t.prototype,"messages",{get:function(){if(0===this.messageBox.length)return"message box empty!";for(var t="",n=0,e=this.messageBox;n<e.length;n++)t+=" --- "+e[n]+" ---";return t},enumerable:!1,configurable:!0}),t}(),c=function(){return new a},u=function(){function t(){this.collection={},this.admin=c(),this.messageBox=[]}return t.prototype.register=function(t){this.collection[t.firstName]=t,t.adminMediator=this},t.prototype.send=function(t,n){console.log("message",t),console.log("from",n),this.messageBox.push(t)},t}(),d=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}(),l=function(t){function n(n,e,i,o,r){var s=t.call(this,n,e,i,o,r)||this;return s.adminMediator=null,s}return d(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},n.prototype.send=function(t){var n;null===(n=this.adminMediator)||void 0===n||n.send(t,this),console.log("x",t),console.log(this.adminMediator)},n.prototype.receive=function(t,n){return t+" - from "+n},n}(i),h=new u,p=function(){return[new l(1,"Frank","Mellberg","frank@io.com",21),new l(2,"Rio","Ferdinand","rio@io.com",25),new l(3,"Nemanja","Vidic","nemanja@io.com",32),new l(4,"Fredrik","ljungberg","fredrik@io.com",32)]},m=function(){function t(t,n,i,o,r){this.parentElement=t,this.list=n,this.data=i,this.title=o,this.subTitles=r,this.listView=new e(this.parentElement,this.list,this.title,this.subTitles,"student"),this.confirmationText="",this.admin=c()}return t.prototype.updateText=function(t){this.confirmationText=t},t.prototype.render=function(){var t,n=this,e=document.querySelector(".modal");e.classList.add("show-modal");var i='\n    <div class="modal-container">\n      '+this.listView.renderRawHtml()+"\n      "+this.confirmationText+'\n      <button class="close-modal">\n        ‚ùå\n      </button>\n    </div>\n    ';e.innerHTML=i,null===(t=document.querySelector(".close-modal"))||void 0===t||t.addEventListener("click",(function(){e.classList.remove("show-modal"),e.innerHTML=""})),document.querySelectorAll(".modal tbody tr").forEach((function(t){t.addEventListener("click",(function(t){if("send"in n.data){var e="You have now been registered to the "+t.target.innerText+" Course";n.data.send(e),n.updateText(e),n.updateHtml()}}))}))},t.prototype.updateHtml=function(){this.render()},t}(),f=function(){function t(t,n,e,i){this.id=t,this.title=n,this.description=e,this.duration=i}return t.prototype.displayInfo=function(){return{title:this.title,duration:this.duration}},t}(),y=function(){function t(t){this.parentElement=t,this.studentsView=new e(this.parentElement,p(),"Students",["name","email","age"],"student")}return t.prototype.handleClickStudent=function(){this.studentsView.clickHandler((function(t){var n=p().find((function(n){return n.id===t})),e=[new f(1,"math","math is wonderful","6h"),new f(2,"history","history is good for you","3h"),new f(3,"swedish","without swedish you will face some serious problems","2h"),new f(4,"english","the global language, learn it NOW!!!","5h")],i=document.querySelector(".modal-list");new m(i,e,n,"courses",["title","duration"]).render()}))},t.prototype.handleShowProfile=function(){},t.prototype.init=function(){this.studentsView.init(),this.handleClickStudent(),this.handleShowProfile(),function(){for(var t=0,n=p();t<n.length;t++){var e=n[t];h.register(e)}h.register(c())}(),console.log("adminMediator",h)},t}(),g=function(){function t(t){this.parentElement=t,this.admin=c()}return t.prototype.render=function(){var t,n=this;console.log("admin",this.admin,this.parentElement);var e='\n      <div class="admin-wrapper wrapper-'+this.admin.firstName+'">\n        <button id="admin-profile-btn" class="button">Admin Profile</button>\n\n        <div class="admin-content">\n          <h3> Mr Admin '+this.admin.firstName+"</h3>\n          <p>"+this.admin.slug+"</p>\n        </div>\n\n      </div>\n    ";this.parentElement.innerHTML=e;var i=document.querySelector(".admin-content");null===(t=document.getElementById("admin-profile-btn"))||void 0===t||t.addEventListener("click",(function(){i.classList.toggle("show-admin-content"),console.log(n.admin.messages)}))},t}(),w=function(){function t(t){this.parentElement=t,this.adminView=new g(this.parentElement)}return t.prototype.init=function(){this.adminView.render()},t}();new n(new s(document.getElementById("teacher")),new y(document.getElementById("student")),new w(document.getElementById("admin"))).render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zY2hvb2wtZGF0YS8uL3NyYy9wYXR0ZXJucy9tdmMyLjAvY29udHJvbGxlcnMvYXBwLnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL3BhdHRlcm5zL212YzIuMC92aWV3cy9saXN0LXZpZXcudHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvcGF0dGVybnMvbXZjMi4wL21vZGVscy9QZXJzb24udHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvcGF0dGVybnMvbXZjMi4wL21vZGVscy90ZWFjaGVyLnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL3BhdHRlcm5zL212YzIuMC9jb250cm9sbGVycy90ZWFjaGVyLnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL3BhdHRlcm5zL212YzIuMC9tb2RlbHMvYWRtaW4udHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvcGF0dGVybnMvbXZjMi4wL21vZGVscy9tZWRpYXRvci50cyIsIndlYnBhY2s6Ly9zY2hvb2wtZGF0YS8uL3NyYy9wYXR0ZXJucy9tdmMyLjAvbW9kZWxzL3N0dWRlbnQudHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvcGF0dGVybnMvbXZjMi4wL3ZpZXdzL21vZGFsLXZpZXcudHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvcGF0dGVybnMvbXZjMi4wL21vZGVscy9jb3Vyc2UudHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvcGF0dGVybnMvbXZjMi4wL2NvbnRyb2xsZXJzL3N0dWRlbnQudHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvcGF0dGVybnMvbXZjMi4wL3ZpZXdzL2FkbWluLXZpZXcudHMiLCJ3ZWJwYWNrOi8vc2Nob29sLWRhdGEvLi9zcmMvcGF0dGVybnMvbXZjMi4wL2NvbnRyb2xsZXJzL2FkbWluLnRzIiwid2VicGFjazovL3NjaG9vbC1kYXRhLy4vc3JjL2luZGV4LnRzIl0sIm5hbWVzIjpbInRlYWNoZXIiLCJzdHVkZW50cyIsImFkbWluIiwidGhpcyIsInJlbmRlciIsImluaXQiLCJwYXJlbnRFbGVtZW50IiwiZGF0YUxpc3QiLCJ0aXRsZSIsInN1YlRpdGxlcyIsInR5cGUiLCJjbGlja0hhbmRsZXIiLCJzdWJzY3JpYmVyIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9yRWFjaCIsInRyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImlkIiwic3BsaXQiLCJwYXJzZUludCIsImRhdGFzZXQiLCJodG1sIiwibWFwIiwidCIsImpvaW4iLCJkYXRhIiwiZGlzcGxheUluZm8iLCJPYmplY3QiLCJrZXlzIiwia2V5IiwiaW5uZXJIVE1MIiwicmVuZGVyUmF3SHRtbCIsIm1vdW50IiwiZWxlbWVudCIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwiZW1haWwiLCJhZ2UiLCJzdWJqZWN0cyIsIm5hbWUiLCJzdWJqZWN0IiwicHVzaCIsIlBlcnNvbiIsInRlYWNoZXJzVmlldyIsIkxpc3RWaWV3IiwiVGVhY2hlciIsInNsdWciLCJpc0FkbWluIiwibWVzc2FnZUJveCIsImFkbWluTWVkaWF0b3IiLCJnZXRJbnN0YW5jZSIsIkFkbWluIiwiaW5zdGFuY2UiLCJyZWNlaXZlIiwibWVzc2FnZSIsImZyb20iLCJzdHVkZW50UmVnaXN0cmVkRm9yQ291cnNlTWVzc2FnZSIsImNvbnNvbGUiLCJsb2ciLCJzZW5kIiwibGVuZ3RoIiwic3RyIiwibG9hZEFkbWluIiwiY29sbGVjdGlvbiIsInJlZ2lzdGVyIiwiaHVtYW4iLCJBZG1pbk1lZGlhdG9yIiwibG9hZFN0dWRlbnRzIiwiU3R1ZGVudCIsImxpc3QiLCJsaXN0VmlldyIsImNvbmZpcm1hdGlvblRleHQiLCJ1cGRhdGVUZXh0IiwidGV4dCIsIm1vZGFsV3JhcHBlciIsInF1ZXJ5U2VsZWN0b3IiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJldmVudCIsInRhcmdldCIsImlubmVyVGV4dCIsInVwZGF0ZUh0bWwiLCJkZXNjcmlwdGlvbiIsImR1cmF0aW9uIiwic3R1ZGVudHNWaWV3IiwiaGFuZGxlQ2xpY2tTdHVkZW50IiwiZmluZCIsInN0dWRlbnQiLCJjb3Vyc2VzIiwiQ291cnNlIiwibW9kYWwiLCJoYW5kbGVTaG93UHJvZmlsZSIsInJlZ2lzdGVyQWxsU3R1ZGVudHMiLCJhZG1pbkNvbnRlbnQiLCJnZXRFbGVtZW50QnlJZCIsInRvZ2dsZSIsIm1lc3NhZ2VzIiwiYWRtaW5WaWV3IiwiQWRtaW5WaWV3IiwiQXBwIiwiVGVhY2hlckNvbnRyb2xsZXIiLCJTdHVkZW50Q29udHJvbGxlciIsIkFkbWluQ29udHJvbGxlciJdLCJtYXBwaW5ncyI6Im1CQUlBLEksRUFBQSxhQUlFLFdBQVlBLEVBQTRCQyxFQUE2QkMsR0FDbkVDLEtBQUtILFFBQVVBLEVBQ2ZHLEtBQUtGLFNBQVdBLEVBQ2hCRSxLQUFLRCxNQUFRQSxFQVFqQixPQUxFLFlBQUFFLE9BQUEsV0FDRUQsS0FBS0gsUUFBUUssT0FDYkYsS0FBS0QsTUFBTUcsT0FDWEYsS0FBS0YsU0FBU0ksUUFFbEIsRUFmQSxHQ0RBLGFBTUUsV0FDRUMsRUFDQUMsRUFDQUMsRUFDQUMsRUFDQUMsR0FFQVAsS0FBS0csY0FBZ0JBLEVBQ3JCSCxLQUFLSSxTQUFXQSxFQUNoQkosS0FBS0ssTUFBUUEsRUFDYkwsS0FBS00sVUFBWUEsRUFDakJOLEtBQUtPLEtBQU9BLEVBcUZoQixPQWxGRSxZQUFBQyxhQUFBLFNBQWFDLEdBQ0NDLFNBQVNDLGlCQUFpQixNQUNsQ0MsU0FBUSxTQUFBQyxHQUNWLE9BQUFBLEVBQUdDLGlCQUFpQixTQUFTLFdBRWQsWUFERUQsRUFBR0UsR0FBR0MsTUFBTSxLQUFJLElBRTdCUCxFQUFXUSxTQUFTSixFQUFHSyxRQUFRSCxHQUFLLFlBT3BDLFlBQUFkLE9BQVIsc0JBQ1FrQixFQUFPLDJDQUN1Qm5CLEtBQUtLLE1BQUsseUJBQzlCTCxLQUFLSyxNQUFLLHdCQUNYTCxLQUFLSyxNQUFLLDBDQUVqQkwsS0FBS00sVUFBVWMsS0FBSSxTQUFB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RUFBa0IxRixTQUFTbUYsZUFBZSxZQUM5QyxJQUFJUSxFQUFnQjNGLFNBQVNtRixlQUFlLFdBQzVDNUYsVSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUZWFjaGVyQ29udHJvbGxlciB9IGZyb20gXCIuL3RlYWNoZXJcIlxuaW1wb3J0IHsgU3R1ZGVudENvbnRyb2xsZXIgfSBmcm9tIFwiLi9zdHVkZW50XCJcbmltcG9ydCB7IEFkbWluQ29udHJvbGxlciB9IGZyb20gXCIuL2FkbWluXCJcblxuZXhwb3J0IGNsYXNzIEFwcCB7XG4gIHRlYWNoZXI6IFRlYWNoZXJDb250cm9sbGVyXG4gIHN0dWRlbnRzOiBTdHVkZW50Q29udHJvbGxlclxuICBhZG1pbjogQWRtaW5Db250cm9sbGVyXG4gIGNvbnN0cnVjdG9yKHRlYWNoZXI6IFRlYWNoZXJDb250cm9sbGVyLCBzdHVkZW50czogU3R1ZGVudENvbnRyb2xsZXIsIGFkbWluOiBBZG1pbkNvbnRyb2xsZXIpIHtcbiAgICB0aGlzLnRlYWNoZXIgPSB0ZWFjaGVyXG4gICAgdGhpcy5zdHVkZW50cyA9IHN0dWRlbnRzXG4gICAgdGhpcy5hZG1pbiA9IGFkbWluXG4gIH1cblxuICByZW5kZXIoKTogdm9pZCB7XG4gICAgdGhpcy50ZWFjaGVyLmluaXQoKVxuICAgIHRoaXMuYWRtaW4uaW5pdCgpXG4gICAgdGhpcy5zdHVkZW50cy5pbml0KClcbiAgfVxufVxuIiwiaW1wb3J0IHsgQ291cnNlIH0gZnJvbSBcIi4uLy4uL212Yy9tb2RlbHMvY291cnNlLW1vZGVsXCJcbmltcG9ydCB7IFRlYWNoZXIgfSBmcm9tIFwiLi4vbW9kZWxzL3RlYWNoZXJcIlxuaW1wb3J0IHsgV2hhdE1vZGVsVHlwZSB9IGZyb20gXCIuLi90eXBlc1wiXG5leHBvcnQgY2xhc3MgTGlzdFZpZXc8VD4ge1xuICBwYXJlbnRFbGVtZW50OiBIVE1MRGl2RWxlbWVudFxuICBkYXRhTGlzdDogQXJyYXk8VD5cbiAgdGl0bGU6IHN0cmluZ1xuICBzdWJUaXRsZXM6IHN0cmluZ1tdXG4gIHR5cGU6IFdoYXRNb2RlbFR5cGUgLy8gc3R1ZGVudCBvcmUgdGVhY2hlclxuICBjb25zdHJ1Y3RvcihcbiAgICBwYXJlbnRFbGVtZW50OiBIVE1MRGl2RWxlbWVudCxcbiAgICBkYXRhTGlzdDogQXJyYXk8VD4sXG4gICAgdGl0bGU6IHN0cmluZyxcbiAgICBzdWJUaXRsZXM6IHN0cmluZ1tdLFxuICAgIHR5cGU6IFdoYXRNb2RlbFR5cGUsXG4gICkge1xuICAgIHRoaXMucGFyZW50RWxlbWVudCA9IHBhcmVudEVsZW1lbnRcbiAgICB0aGlzLmRhdGFMaXN0ID0gZGF0YUxpc3RcbiAgICB0aGlzLnRpdGxlID0gdGl0bGVcbiAgICB0aGlzLnN1YlRpdGxlcyA9IHN1YlRpdGxlc1xuICAgIHRoaXMudHlwZSA9IHR5cGVcbiAgfVxuXG4gIGNsaWNrSGFuZGxlcihzdWJzY3JpYmVyOiBGdW5jdGlvbikge1xuICAgIGNvbnN0IHRycyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCJ0clwiKVxuICAgIHRycy5mb3JFYWNoKHRyID0+XG4gICAgICB0ci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgICBjb25zdCBbdHlwZV0gPSB0ci5pZC5zcGxpdChcIi1cIilcbiAgICAgICAgaWYgKHR5cGUgPT09IFwic3R1ZGVudFwiKSB7XG4gICAgICAgICAgc3Vic2NyaWJlcihwYXJzZUludCh0ci5kYXRhc2V0LmlkISwgMTApKVxuICAgICAgICB9XG4gICAgICAgIC8vIHNlc3Npb25TdG9yYWdlLnNldEl0ZW0oXCJ1c2VyXCIsIFN0cmluZyh0ci5kYXRhc2V0LmlkKSlcbiAgICAgIH0pLFxuICAgIClcbiAgfVxuXG4gIHByaXZhdGUgcmVuZGVyKCk6IHZvaWQge1xuICAgIGNvbnN0IGh0bWwgPSBgXG4gICAgPGRpdiBjbGFzcz1cInRhYmxlLXdyYXBwZXIgd3JhcHBlci0ke3RoaXMudGl0bGV9XCI+XG4gICAgPHRhYmxlIGNsYXNzPVwiJHt0aGlzLnRpdGxlfVwiPlxuICAgICAgICA8Y2FwdGlvbj4ke3RoaXMudGl0bGV9PC9jYXB0aW9uPlxuICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgJHt0aGlzLnN1YlRpdGxlcy5tYXAodCA9PiBgPHRoPiR7dH08L3RoPmApLmpvaW4oXCJcIil9XG4gICAgICAgIDwvdGhlYWQ+XG4gICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAkeyh0aGlzLmRhdGFMaXN0IGFzIEFycmF5PFQ+KVxuICAgICAgICAgICAgLm1hcCgoZGF0YTogYW55KSA9PiB7XG4gICAgICAgICAgICAgIGNvbnN0IGRpc3BsYXlJbmZvID0gZGF0YS5kaXNwbGF5SW5mbygpIGFzIHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH1cbiAgICAgICAgICAgICAgcmV0dXJuIGBcbiAgICAgICAgICAgICAgICA8dHIgZGF0YS1pZD1cIiR7ZGF0YS5pZH1cIiBpZD1cIiR7XG4gICAgICAgICAgICAgICAgdGhpcy50eXBlID09PSBcInN0dWRlbnRcIlxuICAgICAgICAgICAgICAgICAgPyBgc3R1ZGVudC0ke2RhdGEuaWR9YFxuICAgICAgICAgICAgICAgICAgOiB0aGlzLnR5cGUgPT09IFwiY291cnNlXCJcbiAgICAgICAgICAgICAgICAgID8gYGNvdXJzZS0ke2RhdGEuaWR9YFxuICAgICAgICAgICAgICAgICAgOiBgdGVhY2hlci0ke2RhdGEuaWR9YFxuICAgICAgICAgICAgICB9XCI+XG4gICAgICAgICAgICAgICAgJHtPYmplY3Qua2V5cyhkaXNwbGF5SW5mbylcbiAgICAgICAgICAgICAgICAgIC5tYXAoa2V5ID0+IGA8dGQgZGF0YS1pbmZvPVwiJHtkaXNwbGF5SW5mb1trZXldfVwiPiR7ZGlzcGxheUluZm9ba2V5XX08L3RkPmApXG4gICAgICAgICAgICAgICAgICAuam9pbihcIlwiKX1cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgIGBcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuam9pbihcIlwiKX1cbiAgICAgICAgPC90Ym9keT5cbiAgICAgIDwvdGFibGU+XG4gICAgPC9kaXY+XG4gICAgYFxuICAgIHRoaXMucGFyZW50RWxlbWVudC5pbm5lckhUTUwgPSBodG1sXG4gIH1cblxuICByZW5kZXJSYXdIdG1sKCk6IHN0cmluZyB7XG4gICAgY29uc3QgaHRtbCA9IGBcbiAgICA8ZGl2IGNsYXNzPVwidGFibGUtd3JhcHBlciB3cmFwcGVyLSR7dGhpcy50aXRsZX1cIj5cbiAgICA8dGFibGU+XG4gICAgICAgIDxjYXB0aW9uPiR7dGhpcy50aXRsZX08L2NhcHRpb24+XG4gICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAke3RoaXMuc3ViVGl0bGVzLm1hcCh0ID0+IGA8dGg+JHt0fTwvdGg+YCkuam9pbihcIlwiKX1cbiAgICAgICAgPC90aGVhZD5cbiAgICAgICAgPHRib2R5PlxuICAgICAgICAgICR7KHRoaXMuZGF0YUxpc3QgYXMgQXJyYXk8YW55PilcbiAgICAgICAgICAgIC5tYXAoKGRhdGE6IGFueSkgPT4ge1xuICAgICAgICAgICAgICBjb25zdCBkaXNwbGF5SW5mbyA9IGRhdGEuZGlzcGxheUluZm8oKSBhcyB7IFtrZXk6IHN0cmluZ106IHN0cmluZyB9XG4gICAgICAgICAgICAgIHJldHVybiBgXG4gICAgICAgICAgICAgICAgPHRyIGRhdGEtaWQ9XCIke2RhdGEuaWR9XCI+XG4gICAgICAgICAgICAgICAgJHtPYmplY3Qua2V5cyhkaXNwbGF5SW5mbylcbiAgICAgICAgICAgICAgICAgIC5tYXAoa2V5ID0+IGA8dGQ+JHtkaXNwbGF5SW5mb1trZXldfTwvdGQ+YClcbiAgICAgICAgICAgICAgICAgIC5qb2luKFwiXCIpfVxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgYFxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5qb2luKFwiXCIpfVxuICAgICAgICA8L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgICA8L2Rpdj5cbiAgICBgXG4gICAgcmV0dXJuIGh0bWxcbiAgfVxuXG4gIG1vdW50KGVsZW1lbnQ6IEhUTUxFbGVtZW50KSB7XG4gICAgZWxlbWVudC5pbm5lckhUTUwgPSB0aGlzLnJlbmRlclJhd0h0bWwoKVxuICB9XG5cbiAgaW5pdCgpOiB2b2lkIHtcbiAgICB0aGlzLnJlbmRlcigpXG4gIH1cbn1cbiIsImV4cG9ydCBjbGFzcyBQZXJzb24ge1xuICBpZDogbnVtYmVyXG4gIGZpcnN0TmFtZTogc3RyaW5nXG4gIGxhc3ROYW1lOiBzdHJpbmdcbiAgZW1haWw6IHN0cmluZ1xuICBhZ2U6IG51bWJlclxuICBjb25zdHJ1Y3RvcihpZDogbnVtYmVyLCBmaXJzdE5hbWU6IHN0cmluZywgbGFzdE5hbWU6IHN0cmluZywgZW1haWw6IHN0cmluZywgYWdlOiBudW1iZXIpIHtcbiAgICB0aGlzLmlkID0gaWRcbiAgICB0aGlzLmZpcnN0TmFtZSA9IGZpcnN0TmFtZVxuICAgIHRoaXMubGFzdE5hbWUgPSBsYXN0TmFtZVxuICAgIHRoaXMuZW1haWwgPSBlbWFpbFxuICAgIHRoaXMuYWdlID0gYWdlXG4gIH1cbn1cbiIsImltcG9ydCB7IFBlcnNvbiB9IGZyb20gXCIuL1BlcnNvblwiXG5pbXBvcnQgeyBEaXNwbGF5SW5mbywgU3ViamVjdCwgVGVhY2hlclN0dWRlbnRDb25zdHJ1Y3QgfSBmcm9tIFwiLi4vdHlwZXNcIlxuaW1wb3J0IHsgbmFub2lkIH0gZnJvbSBcIm5hbm9pZFwiXG5cbmV4cG9ydCBjbGFzcyBUZWFjaGVyIGV4dGVuZHMgUGVyc29uIGltcGxlbWVudHMgVGVhY2hlclN0dWRlbnRDb25zdHJ1Y3Qge1xuICBzdWJqZWN0czogU3ViamVjdFtdXG4gIGNvbnN0cnVjdG9yKGlkOiBudW1iZXIsIGZpcnN0TmFtZTogc3RyaW5nLCBsYXN0TmFtZTogc3RyaW5nLCBlbWFpbDogc3RyaW5nLCBhZ2U6IG51bWJlcikge1xuICAgIHN1cGVyKGlkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBlbWFpbCwgYWdlKVxuICAgIHRoaXMuc3ViamVjdHMgPSBbXVxuICB9XG5cbiAgZGlzcGxheUluZm8oKTogRGlzcGxheUluZm8ge1xuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBgJHt0aGlzLmZpcnN0TmFtZX0tJHt0aGlzLmxhc3ROYW1lfWAsXG4gICAgICBlbWFpbDogdGhpcy5lbWFpbCxcbiAgICAgIGFnZTogYCR7dGhpcy5hZ2V9YCxcbiAgICB9XG4gIH1cblxuICBzZXQgYWRkU3ViamVjdChzdWJqZWN0OiBTdWJqZWN0KSB7XG4gICAgdGhpcy5zdWJqZWN0cy5wdXNoKHN1YmplY3QpXG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGxvYWRUZWFjaGVycyA9ICgpID0+IFtcbiAgbmV3IFRlYWNoZXIoMSwgXCJGcmFua1wiLCBcIlNtaXRoXCIsIFwiZnJhbmtAaW8uY29tXCIsIDQzKSxcbiAgbmV3IFRlYWNoZXIoMiwgXCJMb2dhblwiLCBcIkpvbnNzb25cIiwgXCJsb2dhbkBpby5jb21cIiwgNDcpLFxuICBuZXcgVGVhY2hlcigzLCBcIk1pYVwiLCBcIkdyZWdlclwiLCBcIm1pYUBpby5jb21cIiwgNDEpLFxuICBuZXcgVGVhY2hlcig0LCBcIkJvcmlzXCIsIFwiUm9vbmV5XCIsIFwiZnJhbmtAaW8uY29tXCIsIDUzKSxcbl1cbiIsImltcG9ydCB7IExpc3RWaWV3IH0gZnJvbSBcIi4uL3ZpZXdzL2xpc3Qtdmlld1wiXG5pbXBvcnQgeyBsb2FkVGVhY2hlcnMsIFRlYWNoZXIgfSBmcm9tIFwiLi4vbW9kZWxzL3RlYWNoZXJcIlxuXG5leHBvcnQgY2xhc3MgVGVhY2hlckNvbnRyb2xsZXIge1xuICBwYXJlbnRFbGVtZW50OiBIVE1MRGl2RWxlbWVudFxuICB0ZWFjaGVyc1ZpZXc6IExpc3RWaWV3PFRlYWNoZXI+XG4gIGNvbnN0cnVjdG9yKHBhcmVudEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50KSB7XG4gICAgdGhpcy5wYXJlbnRFbGVtZW50ID0gcGFyZW50RWxlbWVudFxuICAgIHRoaXMudGVhY2hlcnNWaWV3ID0gbmV3IExpc3RWaWV3KFxuICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LFxuICAgICAgbG9hZFRlYWNoZXJzKCksXG4gICAgICBcIlRlYWNoZXJzXCIsXG4gICAgICBbXCJuYW1lXCIsIFwiZW1haWxcIiwgXCJhZ2VcIl0sXG4gICAgICBcInRlYWNoZXJcIixcbiAgICApXG4gIH1cblxuICBpbml0KCk6IHZvaWQge1xuICAgIHRoaXMudGVhY2hlcnNWaWV3LmluaXQoKVxuICB9XG59XG4iLCJpbXBvcnQgeyBBZG1pbk1lZGlhdG9yIH0gZnJvbSBcIi4vbWVkaWF0b3JcIlxuaW1wb3J0IHsgU3R1ZGVudCB9IGZyb20gXCIuL3N0dWRlbnRcIlxuY2xhc3MgQWRtaW4ge1xuICBwcml2YXRlIHN0YXRpYyBpbnN0YW5jZTogQWRtaW5cbiAgaWQ6IG51bWJlclxuICBmaXJzdE5hbWU6IHN0cmluZ1xuICBzbHVnOiBzdHJpbmdcbiAgaXNBZG1pbjogYm9vbGVhblxuICBwcml2YXRlIG1lc3NhZ2VCb3g6IHN0cmluZ1tdXG4gIGFkbWluTWVkaWF0b3I6IG51bGwgfCBBZG1pbk1lZGlhdG9yXG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgdGhpcy5pZCA9IDk5XG4gICAgdGhpcy5maXJzdE5hbWUgPSBcIkFsZnJlZFwiXG4gICAgdGhpcy5zbHVnID0gXCJJIGFtIHRoZSBib3NzIPCfkrAhISFcIlxuICAgIHRoaXMuaXNBZG1pbiA9IHRydWVcbiAgICB0aGlzLm1lc3NhZ2VCb3ggPSBbXVxuICAgIHRoaXMuYWRtaW5NZWRpYXRvciA9IG51bGxcbiAgfVxuICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgaWYgKCFBZG1pbi5pbnN0YW5jZSkge1xuICAgICAgQWRtaW4uaW5zdGFuY2UgPSBuZXcgQWRtaW4oKVxuICAgIH1cbiAgICByZXR1cm4gQWRtaW4uaW5zdGFuY2VcbiAgfVxuICByZWNlaXZlKG1lc3NhZ2U6IHN0cmluZywgZnJvbTogU3R1ZGVudCk6IHN0cmluZyB7XG4gICAgY29uc3Qgc3R1ZGVudFJlZ2lzdHJlZEZvckNvdXJzZU1lc3NhZ2UgPSBgU3R1ZGVudCAke2Zyb20uZmlyc3ROYW1lfSAke21lc3NhZ2V9YFxuICAgIGNvbnNvbGUubG9nKHN0dWRlbnRSZWdpc3RyZWRGb3JDb3Vyc2VNZXNzYWdlKVxuICAgIHRoaXMubWVzc2FnZUJveC5wdXNoKG1lc3NhZ2UpXG4gICAgcmV0dXJuIHN0dWRlbnRSZWdpc3RyZWRGb3JDb3Vyc2VNZXNzYWdlXG4gIH1cblxuICBzZW5kKG1lc3NhZ2U6IHN0cmluZykge1xuICAgIHRoaXMuYWRtaW5NZWRpYXRvcj8uc2VuZChtZXNzYWdlLCB0aGlzKVxuICAgIGNvbnNvbGUubG9nKFwieFwiLCBtZXNzYWdlKVxuICAgIGNvbnNvbGUubG9nKHRoaXMuYWRtaW5NZWRpYXRvcilcbiAgfVxuXG4gIGdldCBtZXNzYWdlcygpOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLm1lc3NhZ2VCb3gubGVuZ3RoID09PSAwKSByZXR1cm4gXCJtZXNzYWdlIGJveCBlbXB0eSFcIlxuICAgIGxldCBzdHIgPSBgYFxuICAgIGZvciAoY29uc3QgbSBvZiB0aGlzLm1lc3NhZ2VCb3gpIHtcbiAgICAgIHN0ciArPSBgIC0tLSAke219IC0tLWBcbiAgICB9XG4gICAgcmV0dXJuIHN0clxuICB9XG59XG5cbmNvbnN0IGxvYWRBZG1pbiA9ICgpID0+IG5ldyBBZG1pbigpXG5cbmV4cG9ydCB7IEFkbWluLCBsb2FkQWRtaW4gfVxuIiwiaW1wb3J0IHsgQWRtaW4sIGxvYWRBZG1pbiB9IGZyb20gXCIuL2FkbWluXCJcbmltcG9ydCB7IFN0dWRlbnQgfSBmcm9tIFwiLi9zdHVkZW50XCJcblxuY2xhc3MgQWRtaW5NZWRpYXRvciB7XG4gIGNvbGxlY3Rpb246IFJlY29yZDxzdHJpbmcsIFN0dWRlbnQgfCBBZG1pbj5cbiAgYWRtaW46IEFkbWluXG4gIG1lc3NhZ2VCb3g6IHN0cmluZ1tdXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuY29sbGVjdGlvbiA9IHt9XG4gICAgdGhpcy5hZG1pbiA9IGxvYWRBZG1pbigpXG4gICAgdGhpcy5tZXNzYWdlQm94ID0gW11cbiAgfVxuICByZWdpc3RlcihodW1hbjogU3R1ZGVudCB8IEFkbWluKSB7XG4gICAgdGhpcy5jb2xsZWN0aW9uW2h1bWFuLmZpcnN0TmFtZV0gPSBodW1hblxuICAgIGh1bWFuLmFkbWluTWVkaWF0b3IgPSB0aGlzXG4gIH1cblxuICBzZW5kKG1lc3NhZ2U6IHN0cmluZywgZnJvbTogU3R1ZGVudCB8IEFkbWluKSB7XG4gICAgY29uc29sZS5sb2coXCJtZXNzYWdlXCIsIG1lc3NhZ2UpXG4gICAgY29uc29sZS5sb2coXCJmcm9tXCIsIGZyb20pXG4gICAgdGhpcy5tZXNzYWdlQm94LnB1c2gobWVzc2FnZSlcbiAgfVxufVxuXG5leHBvcnQgeyBBZG1pbk1lZGlhdG9yIH1cbiIsImltcG9ydCB7IEFkbWluLCBsb2FkQWRtaW4gfSBmcm9tIFwiLi9hZG1pblwiXG5pbXBvcnQgeyBBZG1pbk1lZGlhdG9yIH0gZnJvbSBcIi4vbWVkaWF0b3JcIlxuaW1wb3J0IHsgUGVyc29uIH0gZnJvbSBcIi4vUGVyc29uXCJcblxuY2xhc3MgU3R1ZGVudCBleHRlbmRzIFBlcnNvbiB7XG4gIGFkbWluTWVkaWF0b3I6IG51bGwgfCBBZG1pbk1lZGlhdG9yXG4gIGNvbnN0cnVjdG9yKGlkOiBudW1iZXIsIGZpcnN0TmFtZTogc3RyaW5nLCBsYXN0TmFtZTogc3RyaW5nLCBlbWFpbDogc3RyaW5nLCBhZ2U6IG51bWJlcikge1xuICAgIHN1cGVyKGlkLCBmaXJzdE5hbWUsIGxhc3ROYW1lLCBlbWFpbCwgYWdlKVxuICAgIHRoaXMuYWRtaW5NZWRpYXRvciA9IG51bGxcbiAgfVxuICBkaXNwbGF5SW5mbygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogYCR7dGhpcy5maXJzdE5hbWV9LSR7dGhpcy5sYXN0TmFtZX1gLFxuICAgICAgZW1haWw6IHRoaXMuZW1haWwsXG4gICAgICBhZ2U6IGAke3RoaXMuYWdlfWAsXG4gICAgfVxuICB9XG4gIHNlbmQobWVzc2FnZTogc3RyaW5nKSB7XG4gICAgdGhpcy5hZG1pbk1lZGlhdG9yPy5zZW5kKG1lc3NhZ2UsIHRoaXMpXG4gICAgY29uc29sZS5sb2coXCJ4XCIsIG1lc3NhZ2UpXG4gICAgY29uc29sZS5sb2codGhpcy5hZG1pbk1lZGlhdG9yKVxuICB9XG4gIHJlY2VpdmUobWVzc2FnZTogc3RyaW5nLCBmcm9tOiBTdHVkZW50KTogc3RyaW5nIHtcbiAgICByZXR1cm4gYCR7bWVzc2FnZX0gLSBmcm9tICR7ZnJvbX1gXG4gIH1cbn1cblxuY29uc3QgYWRtaW5NZWRpYXRvciA9IG5ldyBBZG1pbk1lZGlhdG9yKClcblxuY29uc3QgbG9hZFN0dWRlbnRzID0gKCkgPT4gW1xuICBuZXcgU3R1ZGVudCgxLCBcIkZyYW5rXCIsIFwiTWVsbGJlcmdcIiwgXCJmcmFua0Bpby5jb21cIiwgMjEpLFxuICBuZXcgU3R1ZGVudCgyLCBcIlJpb1wiLCBcIkZlcmRpbmFuZFwiLCBcInJpb0Bpby5jb21cIiwgMjUpLFxuICBuZXcgU3R1ZGVudCgzLCBcIk5lbWFuamFcIiwgXCJWaWRpY1wiLCBcIm5lbWFuamFAaW8uY29tXCIsIDMyKSxcbiAgbmV3IFN0dWRlbnQoNCwgXCJGcmVkcmlrXCIsIFwibGp1bmdiZXJnXCIsIFwiZnJlZHJpa0Bpby5jb21cIiwgMzIpLFxuXVxuXG5jb25zdCByZWdpc3RlckFsbFN0dWRlbnRzID0gKCk6IHZvaWQgPT4ge1xuICBmb3IgKGxldCBzdHVkZW50IG9mIGxvYWRTdHVkZW50cygpKSB7XG4gICAgYWRtaW5NZWRpYXRvci5yZWdpc3RlcihzdHVkZW50KVxuICB9XG4gIGFkbWluTWVkaWF0b3IucmVnaXN0ZXIobG9hZEFkbWluKCkpXG59XG5cbmV4cG9ydCB7IFN0dWRlbnQsIGxvYWRTdHVkZW50cywgYWRtaW5NZWRpYXRvciwgcmVnaXN0ZXJBbGxTdHVkZW50cyB9XG4iLCJpbXBvcnQgeyBBZG1pbiwgbG9hZEFkbWluIH0gZnJvbSBcIi4uL21vZGVscy9hZG1pblwiXG5pbXBvcnQgeyBTdHVkZW50IH0gZnJvbSBcIi4uL21vZGVscy9zdHVkZW50XCJcbmltcG9ydCB7IFRlYWNoZXIgfSBmcm9tIFwiLi4vbW9kZWxzL3RlYWNoZXJcIlxuaW1wb3J0IHsgTGlzdFZpZXcgfSBmcm9tIFwiLi9saXN0LXZpZXdcIlxuXG5leHBvcnQgY2xhc3MgTW9kYWxWaWV3PFQ+IHtcbiAgcGFyZW50RWxlbWVudDogSFRNTERpdkVsZW1lbnRcbiAgbGlzdDogQXJyYXk8YW55PlxuICBkYXRhOiBTdHVkZW50IHwgVGVhY2hlclxuICB0aXRsZTogc3RyaW5nXG4gIGxpc3RWaWV3OiBMaXN0VmlldzxUPlxuICBzdWJUaXRsZXM6IHN0cmluZ1tdXG4gIGNvbmZpcm1hdGlvblRleHQ6IHN0cmluZ1xuICBhZG1pbjogQWRtaW5cblxuICBjb25zdHJ1Y3RvcihcbiAgICBwYXJlbnRFbGVtZW50OiBIVE1MRGl2RWxlbWVudCxcbiAgICBsaXN0OiBhbnksXG4gICAgZGF0YTogU3R1ZGVudCB8IFRlYWNoZXIsXG4gICAgdGl0bGU6IHN0cmluZyxcbiAgICBzdWJUaXRsZXM6IHN0cmluZ1tdLFxuICApIHtcbiAgICB0aGlzLnBhcmVudEVsZW1lbnQgPSBwYXJlbnRFbGVtZW50XG4gICAgdGhpcy5saXN0ID0gbGlzdFxuICAgIHRoaXMuZGF0YSA9IGRhdGFcbiAgICB0aGlzLnRpdGxlID0gdGl0bGVcbiAgICB0aGlzLnN1YlRpdGxlcyA9IHN1YlRpdGxlc1xuICAgIHRoaXMubGlzdFZpZXcgPSBuZXcgTGlzdFZpZXcoXG4gICAgICB0aGlzLnBhcmVudEVsZW1lbnQsXG4gICAgICB0aGlzLmxpc3QsXG4gICAgICB0aGlzLnRpdGxlLFxuICAgICAgdGhpcy5zdWJUaXRsZXMsXG4gICAgICBcInN0dWRlbnRcIixcbiAgICApXG4gICAgdGhpcy5jb25maXJtYXRpb25UZXh0ID0gXCJcIlxuICAgIHRoaXMuYWRtaW4gPSBsb2FkQWRtaW4oKVxuICB9XG5cbiAgdXBkYXRlVGV4dCh0ZXh0OiBzdHJpbmcpIHtcbiAgICB0aGlzLmNvbmZpcm1hdGlvblRleHQgPSB0ZXh0XG4gIH1cblxuICByZW5kZXIoKTogdm9pZCB7XG4gICAgY29uc3QgbW9kYWxXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbFwiKSBhcyBIVE1MRExpc3RFbGVtZW50XG4gICAgbW9kYWxXcmFwcGVyLmNsYXNzTGlzdC5hZGQoXCJzaG93LW1vZGFsXCIpXG5cbiAgICBjb25zdCBodG1sID0gYFxuICAgIDxkaXYgY2xhc3M9XCJtb2RhbC1jb250YWluZXJcIj5cbiAgICAgICR7dGhpcy5saXN0Vmlldy5yZW5kZXJSYXdIdG1sKCl9XG4gICAgICAke3RoaXMuY29uZmlybWF0aW9uVGV4dH1cbiAgICAgIDxidXR0b24gY2xhc3M9XCJjbG9zZS1tb2RhbFwiPlxuICAgICAgICDinYxcbiAgICAgIDwvYnV0dG9uPlxuICAgIDwvZGl2PlxuICAgIGBcblxuICAgIG1vZGFsV3JhcHBlci5pbm5lckhUTUwgPSBodG1sXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jbG9zZS1tb2RhbFwiKT8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIG1vZGFsV3JhcHBlci5jbGFzc0xpc3QucmVtb3ZlKFwic2hvdy1tb2RhbFwiKVxuICAgICAgbW9kYWxXcmFwcGVyLmlubmVySFRNTCA9IFwiXCJcbiAgICB9KVxuXG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbCB0Ym9keSB0clwiKS5mb3JFYWNoKCh0cjogYW55KSA9PiB7XG4gICAgICB0ci5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGV2ZW50OiBhbnkpID0+IHtcbiAgICAgICAgaWYgKFwic2VuZFwiIGluIHRoaXMuZGF0YSkge1xuICAgICAgICAgIGNvbnN0IGNvbmZpcm1hdGlvblRleHQgPSBgWW91IGhhdmUgbm93IGJlZW4gcmVnaXN0ZXJlZCB0byB0aGUgJHtldmVudC50YXJnZXQuaW5uZXJUZXh0fSBDb3Vyc2VgXG4gICAgICAgICAgdGhpcy5kYXRhLnNlbmQoY29uZmlybWF0aW9uVGV4dCkgLy8gc2VuZGluZyBmcm9tIHRoaXMgc3R1ZGVudCwgdG8gaXRzZWxmIGFuZCB0byBhZG1pblxuICAgICAgICAgIHRoaXMudXBkYXRlVGV4dChjb25maXJtYXRpb25UZXh0KVxuICAgICAgICAgIHRoaXMudXBkYXRlSHRtbCgpXG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgfSlcbiAgfVxuICB1cGRhdGVIdG1sKCkge1xuICAgIHRoaXMucmVuZGVyKClcbiAgfVxufVxuIiwiaW1wb3J0IHsgRGlzcGxheUluZm8gfSBmcm9tIFwiLi4vdHlwZXNcIlxuY2xhc3MgQ291cnNlIHtcbiAgaWQ6IG51bWJlclxuICB0aXRsZTogc3RyaW5nXG4gIGRlc2NyaXB0aW9uOiBzdHJpbmdcbiAgZHVyYXRpb246IHN0cmluZ1xuXG4gIGNvbnN0cnVjdG9yKGlkOiBudW1iZXIsIHRpdGxlOiBzdHJpbmcsIGRlc2NyaXB0aW9uOiBzdHJpbmcsIGR1cmF0aW9uOiBzdHJpbmcpIHtcbiAgICB0aGlzLmlkID0gaWRcbiAgICB0aGlzLnRpdGxlID0gdGl0bGVcbiAgICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb25cbiAgICB0aGlzLmR1cmF0aW9uID0gZHVyYXRpb25cbiAgfVxuXG4gIGRpc3BsYXlJbmZvKCk6IERpc3BsYXlJbmZvIHtcbiAgICByZXR1cm4ge1xuICAgICAgdGl0bGU6IHRoaXMudGl0bGUsXG4gICAgICBkdXJhdGlvbjogdGhpcy5kdXJhdGlvbixcbiAgICB9XG4gIH1cbn1cblxuY29uc3QgbG9hZENvdXJzZXMgPSAoKTogQ291cnNlW10gPT4gW1xuICBuZXcgQ291cnNlKDEsIFwibWF0aFwiLCBcIm1hdGggaXMgd29uZGVyZnVsXCIsIFwiNmhcIiksXG4gIG5ldyBDb3Vyc2UoMiwgXCJoaXN0b3J5XCIsIFwiaGlzdG9yeSBpcyBnb29kIGZvciB5b3VcIiwgXCIzaFwiKSxcbiAgbmV3IENvdXJzZSgzLCBcInN3ZWRpc2hcIiwgXCJ3aXRob3V0IHN3ZWRpc2ggeW91IHdpbGwgZmFjZSBzb21lIHNlcmlvdXMgcHJvYmxlbXNcIiwgXCIyaFwiKSxcbiAgbmV3IENvdXJzZSg0LCBcImVuZ2xpc2hcIiwgXCJ0aGUgZ2xvYmFsIGxhbmd1YWdlLCBsZWFybiBpdCBOT1chISFcIiwgXCI1aFwiKSxcbl1cblxuZXhwb3J0IHsgQ291cnNlLCBsb2FkQ291cnNlcyB9XG4iLCJpbXBvcnQgeyBsb2FkU3R1ZGVudHMsIFN0dWRlbnQsIHJlZ2lzdGVyQWxsU3R1ZGVudHMsIGFkbWluTWVkaWF0b3IgfSBmcm9tIFwiLi4vbW9kZWxzL3N0dWRlbnRcIlxuaW1wb3J0IHsgTGlzdFZpZXcgfSBmcm9tIFwiLi4vdmlld3MvbGlzdC12aWV3XCJcbmltcG9ydCB7IE1vZGFsVmlldyBhcyBDb3Vyc2VzTW9kYWxWaWV3IH0gZnJvbSBcIi4uL3ZpZXdzL21vZGFsLXZpZXdcIlxuaW1wb3J0IHsgbG9hZENvdXJzZXMgfSBmcm9tIFwiLi4vbW9kZWxzL2NvdXJzZVwiXG5pbXBvcnQgeyBQcm9maWxlVmlldyB9IGZyb20gXCIuLi92aWV3cy9wcm9maWxlLXZpZXdcIlxuXG5leHBvcnQgY2xhc3MgU3R1ZGVudENvbnRyb2xsZXIge1xuICBwYXJlbnRFbGVtZW50OiBIVE1MRGl2RWxlbWVudFxuICBzdHVkZW50c1ZpZXc6IExpc3RWaWV3PFN0dWRlbnQ+XG4gIGNvbnN0cnVjdG9yKHBhcmVudEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50KSB7XG4gICAgdGhpcy5wYXJlbnRFbGVtZW50ID0gcGFyZW50RWxlbWVudFxuICAgIHRoaXMuc3R1ZGVudHNWaWV3ID0gbmV3IExpc3RWaWV3KFxuICAgICAgdGhpcy5wYXJlbnRFbGVtZW50LFxuICAgICAgbG9hZFN0dWRlbnRzKCksXG4gICAgICBcIlN0dWRlbnRzXCIsXG4gICAgICBbXCJuYW1lXCIsIFwiZW1haWxcIiwgXCJhZ2VcIl0sXG4gICAgICBcInN0dWRlbnRcIixcbiAgICApXG4gIH1cblxuICBoYW5kbGVDbGlja1N0dWRlbnQoKTogdm9pZCB7XG4gICAgdGhpcy5zdHVkZW50c1ZpZXcuY2xpY2tIYW5kbGVyKChpZDogbnVtYmVyKSA9PiB7XG4gICAgICBjb25zdCBzdHVkZW50ID0gbG9hZFN0dWRlbnRzKCkuZmluZChzdHVkZW50ID0+IHN0dWRlbnQuaWQgPT09IGlkKVxuICAgICAgY29uc3QgZGF0YSA9IHN0dWRlbnQhIGFzIFN0dWRlbnRcbiAgICAgIGNvbnN0IGNvdXJzZXMgPSBsb2FkQ291cnNlcygpXG4gICAgICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWwtbGlzdFwiKSBhcyBIVE1MRGl2RWxlbWVudFxuICAgICAgbmV3IENvdXJzZXNNb2RhbFZpZXc8YW55W10+KG1vZGFsLCBjb3Vyc2VzLCBkYXRhLCBcImNvdXJzZXNcIiwgW1widGl0bGVcIiwgXCJkdXJhdGlvblwiXSkucmVuZGVyKClcbiAgICB9KVxuICB9XG5cbiAgaGFuZGxlU2hvd1Byb2ZpbGUoKTogdm9pZCB7XG4gICAgLy8gdGhpcy5wcm9maWxlVmlldy5jbGlja0hhbmRsZXIoKGlkOiBudW1iZXIpID0+IHtcbiAgICAvLyAgIGNvbnN0IHN0dWRlbnQgPSBsb2FkU3R1ZGVudHMoKS5maW5kKHN0dWRlbnQgPT4gc3R1ZGVudC5pZCA9PT0gaWQpXG4gICAgLy8gICBjb25zdCBkYXRhID0gc3R1ZGVudCEgYXMgU3R1ZGVudFxuICAgIC8vICAgY29uc3QgY291cnNlcyA9IGxvYWRDb3Vyc2VzKClcbiAgICAvLyAgIGNvbnN0IG1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tb2RhbC1saXN0XCIpIGFzIEhUTUxEaXZFbGVtZW50XG4gICAgLy8gICBjb25zb2xlLmxvZyhcIm1vZGFsXCIsIG1vZGFsKVxuICAgIC8vIH0pXG4gIH1cblxuICBpbml0KCk6IHZvaWQge1xuICAgIHRoaXMuc3R1ZGVudHNWaWV3LmluaXQoKVxuICAgIHRoaXMuaGFuZGxlQ2xpY2tTdHVkZW50KClcbiAgICB0aGlzLmhhbmRsZVNob3dQcm9maWxlKClcbiAgICByZWdpc3RlckFsbFN0dWRlbnRzKClcbiAgICBjb25zb2xlLmxvZyhcImFkbWluTWVkaWF0b3JcIiwgYWRtaW5NZWRpYXRvcikgLy8hZm9yIHRlc3RpbmchXG4gIH1cbn1cbiIsImltcG9ydCB7IEFkbWluLCBsb2FkQWRtaW4gfSBmcm9tIFwiLi4vbW9kZWxzL2FkbWluXCJcblxuZXhwb3J0IGNsYXNzIEFkbWluVmlldyB7XG4gIHBhcmVudEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50XG4gIGFkbWluOiBBZG1pblxuICBjb25zdHJ1Y3RvcihwYXJlbnRFbGVtZW50OiBIVE1MRGl2RWxlbWVudCkge1xuICAgIHRoaXMucGFyZW50RWxlbWVudCA9IHBhcmVudEVsZW1lbnRcbiAgICB0aGlzLmFkbWluID0gbG9hZEFkbWluKClcbiAgfVxuXG4gIHJlbmRlcigpOiB2b2lkIHtcbiAgICBjb25zb2xlLmxvZyhcImFkbWluXCIsIHRoaXMuYWRtaW4sIHRoaXMucGFyZW50RWxlbWVudClcbiAgICBjb25zdCBodG1sID0gYFxuICAgICAgPGRpdiBjbGFzcz1cImFkbWluLXdyYXBwZXIgd3JhcHBlci0ke3RoaXMuYWRtaW4uZmlyc3ROYW1lfVwiPlxuICAgICAgICA8YnV0dG9uIGlkPVwiYWRtaW4tcHJvZmlsZS1idG5cIiBjbGFzcz1cImJ1dHRvblwiPkFkbWluIFByb2ZpbGU8L2J1dHRvbj5cblxuICAgICAgICA8ZGl2IGNsYXNzPVwiYWRtaW4tY29udGVudFwiPlxuICAgICAgICAgIDxoMz4gTXIgQWRtaW4gJHt0aGlzLmFkbWluLmZpcnN0TmFtZX08L2gzPlxuICAgICAgICAgIDxwPiR7dGhpcy5hZG1pbi5zbHVnfTwvcD5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgIDwvZGl2PlxuICAgIGBcbiAgICB0aGlzLnBhcmVudEVsZW1lbnQuaW5uZXJIVE1MID0gaHRtbFxuXG4gICAgY29uc3QgYWRtaW5Db250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5hZG1pbi1jb250ZW50XCIpIGFzIEhUTUxEaXZFbGVtZW50XG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZG1pbi1wcm9maWxlLWJ0blwiKT8uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgIGFkbWluQ29udGVudC5jbGFzc0xpc3QudG9nZ2xlKFwic2hvdy1hZG1pbi1jb250ZW50XCIpXG4gICAgICBjb25zb2xlLmxvZyh0aGlzLmFkbWluLm1lc3NhZ2VzKVxuICAgIH0pXG4gIH1cbn1cbiIsImltcG9ydCB7IEFkbWluVmlldyB9IGZyb20gXCIuLi92aWV3cy9hZG1pbi12aWV3XCJcblxuZXhwb3J0IGNsYXNzIEFkbWluQ29udHJvbGxlciB7XG4gIHBhcmVudEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50XG4gIGFkbWluVmlldzogQWRtaW5WaWV3XG4gIGNvbnN0cnVjdG9yKHBhcmVudEVsZW1lbnQ6IEhUTUxEaXZFbGVtZW50KSB7XG4gICAgdGhpcy5wYXJlbnRFbGVtZW50ID0gcGFyZW50RWxlbWVudFxuICAgIHRoaXMuYWRtaW5WaWV3ID0gbmV3IEFkbWluVmlldyh0aGlzLnBhcmVudEVsZW1lbnQpXG4gIH1cblxuICBpbml0KCk6IHZvaWQge1xuICAgIHRoaXMuYWRtaW5WaWV3LnJlbmRlcigpXG4gIH1cbn1cbiIsImltcG9ydCB7IEFwcCB9IGZyb20gXCIuL3BhdHRlcm5zL212YzIuMC9jb250cm9sbGVycy9hcHBcIlxuaW1wb3J0IHsgVGVhY2hlckNvbnRyb2xsZXIgfSBmcm9tIFwiLi9wYXR0ZXJucy9tdmMyLjAvY29udHJvbGxlcnMvdGVhY2hlclwiXG5pbXBvcnQgeyBTdHVkZW50Q29udHJvbGxlciB9IGZyb20gXCIuL3BhdHRlcm5zL212YzIuMC9jb250cm9sbGVycy9zdHVkZW50XCJcbmltcG9ydCB7IEFkbWluQ29udHJvbGxlciB9IGZyb20gXCIuL3BhdHRlcm5zL212YzIuMC9jb250cm9sbGVycy9hZG1pblwiXG47KCgpID0+IHtcbiAgbmV3IEFwcChcbiAgICBuZXcgVGVhY2hlckNvbnRyb2xsZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ0ZWFjaGVyXCIpIGFzIEhUTUxEaXZFbGVtZW50KSxcbiAgICBuZXcgU3R1ZGVudENvbnRyb2xsZXIoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdHVkZW50XCIpIGFzIEhUTUxEaXZFbGVtZW50KSxcbiAgICBuZXcgQWRtaW5Db250cm9sbGVyKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYWRtaW5cIikgYXMgSFRNTERpdkVsZW1lbnQpLFxuICApLnJlbmRlcigpXG59KSgpXG4iXSwic291cmNlUm9vdCI6IiJ9