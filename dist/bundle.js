(()=>{"use strict";var t,o,e=function(){function t(t){this.todos=t}return t.prototype.getElement=function(t){return document.querySelector(t)},t.prototype.createElement=function(t,o,e){void 0===t&&(t=""),void 0===o&&(o=""),void 0===e&&(e="");var n=document.createElement(t);return o&&(n.id=o),e&&n.classList.add(e),n},t.prototype._getTodoText=function(){return document.getElementById("form-input").value},t.prototype._resetInput=function(){var t=document.getElementById("form-input");t.value=t.value=""},t.prototype.bindToggleTodo=function(t){var o=document.querySelectorAll(".todo-item");console.log(o)},t.prototype.renderTodos=function(){return this.todos.map((function(t){return'\n        <li id="todo-item" class="todo-item">\n          <label for="checked">\n            <input type="checkbox" name="checked" id="checked">\n          </label>\n          <strong>'+t.task+'</strong> \n          <button id="delete">delete</button>\n        </li>'})).join("")},t.prototype.mount=function(t){t.appendChild(this.render()),this.update()},t.prototype.render=function(){var t=this.createElement("div","wrapper","wrapper");return t.innerHTML='\n    <main id="main">\n      <h1>Todo List</h1>\n        <form action="" id="form">\n          <div class="form-group">\n            <input type="text" id="form-input" />\n          </div>\n          <div class="form-button-group">\n            <button type="submit">addTodo</button>\n          </div>\n        </form>\n        <ul id="todo-list">\n          '+this.renderTodos()+"\n        </ul>\n    </main>\n      ",t},t.prototype.update=function(){var t=document.querySelectorAll(".todo-item");console.log(t)},t}(),n=function(){return(n=Object.assign||function(t){for(var o,e=1,n=arguments.length;e<n;e++)for(var d in o=arguments[e])Object.prototype.hasOwnProperty.call(o,d)&&(t[d]=o[d]);return t}).apply(this,arguments)},d=function(){function t(){this.todos=[],this.todos=[{id:1,task:"go out with the dog",completed:!1},{id:2,task:"done homework",completed:!0},{id:3,task:"go out for a run",completed:!0},{id:4,task:"cook some food",completed:!1}]}return t.prototype.addTodo=function(t){return this.todos.push(t),this.todos},t.prototype.editTodo=function(t,o,e){return void 0===o&&(o=""),void 0===e&&(e=!1),this.todos=this.todos.map((function(d){return d.id===t?n(n({},d),{task:o,completed:e}):d})),this.todos},t.prototype.toggleTodo=function(t){return this.todos=this.todos.map((function(o){return o.id===t?n(n({},o),{completed:!o.completed}):o})),this.todos},t.prototype.removeTodo=function(t){return this.todos=this.todos.filter((function(o){return o.id!==t})),this.todos},Object.defineProperty(t.prototype,"allTodos",{get:function(){return this.todos},enumerable:!1,configurable:!0}),Object.defineProperty(t.prototype,"size",{get:function(){return this.todos.length},enumerable:!1,configurable:!0}),t.prototype.findTodo=function(t){return this.todos.find((function(o){return o.id===t}))},t}();t=document.getElementById("root"),new function(t,o){var e=this;this.handleAddTodo=function(t){e.model.addTodo(t)},this.handleEditTodo=function(t,o,n){e.model.editTodo(t,o,n)},this.handleDeleteTodo=function(t){e.model.removeTodo(t)},this.handleMount=function(t){e.view.mount(t)},this.handleToggle=function(t){e.model.toggleTodo(t)},this.model=t,this.view=o,this.view.bindToggleTodo(this.handleAddTodo)}(o=new d,new e(o.allTodos)).handleMount(t)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,