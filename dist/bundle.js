(()=>{"use strict";var t,n=function(){function t(t,n,e){this.teacher=t,this.students=n,this.admin=e}return t.prototype.render=function(){this.teacher.init(),this.admin.init(),this.students.init()},t}(),e=function(){function t(t,n,e,i,o){this.parentElement=t,this.dataList=n,this.title=e,this.subTitles=i,this.type=o}return t.prototype.clickHandler=function(t){document.querySelectorAll("tr").forEach((function(n){return n.addEventListener("click",(function(){"student"===n.id.split("-")[0]&&t(parseInt(n.dataset.id,10))}))}))},t.prototype.render=function(){var t=this,n='\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table class="'+this.title+'">\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(n){var e=n.displayInfo();return'\n                <tr data-id="'+n.id+'" id="'+("student"===t.type?"student-"+n.id:"course"===t.type?"course-"+n.id:"teacher-"+n.id)+'">\n                '+Object.keys(e).map((function(t){return'<td data-info="'+e[t]+'">'+e[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    ";this.parentElement.innerHTML=n},t.prototype.renderRawHtml=function(){return'\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table>\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(t){var n=t.displayInfo();return'\n                <tr data-id="'+t.id+'">\n                '+Object.keys(n).map((function(t){return"<td>"+n[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    "},t.prototype.mount=function(t){t.innerHTML=this.renderRawHtml()},t.prototype.init=function(){this.render()},t}(),i=function(t,n,e,i,o){this.id=t,this.firstName=n,this.lastName=e,this.email=i,this.age=o},o=(t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)},function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),r=function(t){function n(n,e,i,o,r){var s=t.call(this,n,e,i,o,r)||this;return s.subjects=[],s}return o(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},n}(i),s=function(){function t(t){this.parentElement=t,this.teachersView=new e(this.parentElement,[new r(1,"Frank","Smith","frank@io.com",43),new r(2,"Logan","Jonsson","logan@io.com",47),new r(3,"Mia","Greger","mia@io.com",41),new r(4,"Boris","Rooney","frank@io.com",53)],"Teachers",["name","email","age"],"teacher")}return t.prototype.init=function(){this.teachersView.init()},t}(),a=function(){function t(){this.id=1,this.name="Alfred",this.slug="I am the boss üí∞!!!",this.isAdmin=!0}return t.getInstance=function(){return t.instance||(t.instance=new t),t.instance},t.prototype.receive=function(t,n){var e="Student "+n.firstName+" "+t;return console.log(e),e},t}(),u=function(){return new a},c=function(){function t(){this.students={},this.admin=u()}return t.prototype.registerStudent=function(t){this.students[t.firstName]=t,t.adminMediator=this},t.prototype.send=function(t,n,e,i){var o=this;e&&i?(e.receive(t,n),null==i||i.receive(t,n)):Object.keys(this.students).forEach((function(e){o.students[e]!==n&&o.students[e].receive(t,n)}))},t}(),d=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}(),l=function(t){function n(n,e,i,o,r){var s=t.call(this,n,e,i,o,r)||this;return s.adminMediator=null,s}return d(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},n.prototype.send=function(t,n,e){var i;null===(i=this.adminMediator)||void 0===i||i.send(t,this,n,e)},n.prototype.receive=function(t,n){return t+" - from "+n},n}(i),h=new c,p=function(){return[new l(1,"Frank","Mellberg","frank@io.com",21),new l(2,"Rio","Ferdinand","rio@io.com",25),new l(3,"Nemanja","Vidic","nemanja@io.com",32),new l(4,"Fredrik","ljungberg","fredrik@io.com",32)]},f=function(){function t(t,n,i,o,r){this.parentElement=t,this.list=n,this.data=i,this.title=o,this.subTitles=r,this.listView=new e(this.parentElement,this.list,this.title,this.subTitles,"student"),this.confirmationText="",this.admin=u()}return t.prototype.updateText=function(t){console.log("TEXT",t),this.confirmationText=t},t.prototype.render=function(){var t,n=this,e=document.querySelector(".modal");e.classList.add("show-modal");var i='\n    <div class="modal-container">\n      '+this.listView.renderRawHtml()+"\n      "+this.confirmationText+'\n      <button class="close-modal">\n        ‚ùå\n      </button>\n    </div>\n    ';e.innerHTML=i,null===(t=document.querySelector(".close-modal"))||void 0===t||t.addEventListener("click",(function(){e.classList.remove("show-modal"),e.innerHTML=""})),document.querySelectorAll(".modal tbody tr").forEach((function(t){t.addEventListener("click",(function(t){if("send"in n.data){var e="You have now been registered to the "+t.target.innerText+" Course";n.data.send(e,n.data,n.admin),n.updateText(e),n.updateHtml()}}))}))},t.prototype.updateHtml=function(){this.render()},t}(),m=function(){function t(t,n,e,i){this.id=t,this.title=n,this.description=e,this.duration=i}return t.prototype.displayInfo=function(){return{title:this.title,duration:this.duration}},t}(),y=function(){function t(t){this.parentElement=t,this.studentsView=new e(this.parentElement,p(),"Students",["name","email","age"],"student")}return t.prototype.handleClickStudent=function(){this.studentsView.clickHandler((function(t){var n=p().find((function(n){return n.id===t})),e=[new m(1,"math","math is wonderful","6h"),new m(2,"history","history is good for you","3h"),new m(3,"swedish","without swedish you will face some serious problems","2h"),new m(4,"english","the global language, learn it NOW!!!","5h")],i=document.querySelector(".modal-list");new f(i,e,n,"courses",["title","duration"]).render()}))},t.prototype.handleShowProfile=function(){},t.prototype.init=function(){this.studentsView.init(),this.handleClickStudent(),function(){for(var t=0,n=p();t<n.length;t++){var e=n[t];h.registerStudent(e)}}(),this.handleShowProfile()},t}(),w=function(){function t(t){this.parentElement=t,this.admin=u()}return t.prototype.render=function(){var t;console.log("admin",this.admin,this.parentElement);var n='\n      <div class="admin-wrapper wrapper-'+this.admin.name+'">\n        <button id="admin-profile-btn" class="button">Admin Profile</button>\n\n        <div class="admin-content">\n          <h3> Mr Admin '+this.admin.name+"</h3>\n          <p>"+this.admin.slug+"</p>\n        </div>\n\n      </div>\n    ";this.parentElement.innerHTML=n;var e=document.querySelector(".admin-content");null===(t=document.getElementById("admin-profile-btn"))||void 0===t||t.addEventListener("click",(function(){e.classList.toggle("show-admin-content")}))},t}(),v=function(){function t(t){this.parentElement=t,this.adminView=new w(this.parentElement)}return t.prototype.init=function(){this.adminView.render()},t}();new n(new s(document.getElementById("teacher")),new y(document.getElementById("student")),new v(document.getElementById("admin"))).render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,