(()=>{"use strict";var t,n=function(){function t(t,n,e){this.teacher=t,this.courses=n,this.students=e}return t.prototype.render=function(){this.teacher.init(),this.courses.init(),this.students.init()},t}(),e=function(){function t(t,n,e,i){this.parentElement=t,this.dataList=n,this.title=e,this.subTitles=i}return t.prototype.clickHandler=function(t){document.querySelectorAll("tr").forEach((function(n){return n.addEventListener("click",(function(){t(parseInt(n.dataset.id,10)),sessionStorage.setItem("user",String(n.dataset.id))}))}))},t.prototype.render=function(){var t='\n    <div class="table-wrapper wrapper-'+this.title+'">\n    <table>\n        <caption>'+this.title+"</caption>\n        <thead>\n          "+this.subTitles.map((function(t){return"<th>"+t+"</th>"})).join("")+"\n        </thead>\n        <tbody>\n          "+this.dataList.map((function(t){var n=t.displayInfo();return'\n                <tr data-id="'+t.id+'">\n                '+Object.keys(n).map((function(t){return"<td>"+n[t]+"</td>"})).join("")+"\n                </tr>\n          "})).join("")+"\n        </tbody>\n      </table>\n    </div>\n    ";this.parentElement.innerHTML=t},t.prototype.init=function(){this.render()},t}(),i=function(){function t(t,n,e,i){this.id=t,this.title=n,this.description=e,this.duration=i}return t.prototype.displayInfo=function(){return{title:this.title,duration:this.duration}},t}(),o=function(){function t(t){this.parentElement=t,this.coursesView=new e(this.parentElement,[new i(1,"math","math is wonderful","6h"),new i(2,"history","history is good for you","3h"),new i(3,"swedish","without swedish you will face some serious problems","2h"),new i(4,"english","the global language, learn it NOW!!!","5h")],"Courses",["title","duration"])}return t.prototype.init=function(){this.coursesView.init()},t}(),r=function(t,n,e,i,o){this.id=t,this.firstName=n,this.lastName=e,this.email=i,this.age=o},s=(t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)},function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}),a=function(t){function n(n,e,i,o,r){var s=t.call(this,n,e,i,o,r)||this;return s.subjects=[],s}return s(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},n}(r),c=function(){function t(t){this.parentElement=t,this.teachersView=new e(this.parentElement,[new a(1,"Frank","Smith","frank@io.com",43),new a(2,"Logan","Jonsson","logan@io.com",47),new a(3,"Mia","Greger","mia@io.com",41),new a(4,"Boris","Rooney","frank@io.com",53)],"Teachers",["name","email","age"])}return t.prototype.init=function(){this.teachersView.init()},t}(),u=function(){var t=function(n,e){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,n){t.__proto__=n}||function(t,n){for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])})(n,e)};return function(n,e){function i(){this.constructor=n}t(n,e),n.prototype=null===e?Object.create(e):(i.prototype=e.prototype,new i)}}(),h=function(t){function n(n,e,i,o,r){return t.call(this,n,e,i,o,r)||this}return u(n,t),n.prototype.displayInfo=function(){return{name:this.firstName+"-"+this.lastName,email:this.email,age:""+this.age}},n}(r),l=function(){return[new h(1,"Frank","Mellberg","frank@isObject.com",21),new h(2,"Rio","Ferdinand","rio@isObject.com",25),new h(3,"Nemanja","Vidic","nemanja@isObject.com",32),new h(4,"Fredrik","ljungberg","fredrik@isObject.com",32),new h(5,"Lotta","Schelin","lotta@isObject.com",21),new h(6,"Stina","Olofsson","sina@isObject.com",21)]},f=function(){function t(t,n){this.list=t,this.data=n}return t.prototype.render=function(){},t}(),d=function(){function t(t){this.parentElement=t,this.studentsView=new e(this.parentElement,l(),"Students",["name","email","age"])}return t.prototype.handleAddStudent=function(){this.studentsView.clickHandler((function(t){var n=l().find((function(n){return n.id===t}));new f([],n).render()}))},t.prototype.init=function(){this.studentsView.init(),this.handleAddStudent()},t}();new n(new c(document.getElementById("teacher")),new o(document.getElementById("course")),new d(document.getElementById("student"))).render()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,